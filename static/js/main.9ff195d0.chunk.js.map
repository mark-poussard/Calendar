{"version":3,"sources":["model/time/Year.ts","model/CalendarOptions.ts","model/time/Day.ts","model/time/Month.ts","business/utility/Util.ts","model/Color.ts","model/data/Entry.ts","business/data/DataGetter.ts","business/data/DataStore.ts","ui/Locations.tsx","ui/CalendarBlock.tsx","ui/CalendarSpace.tsx","ui/CalendarLine.tsx","ui/EmptyCalendarLine.tsx","ui/CalendarBody.tsx","ui/DaysLegend.tsx","ui/CurrentMonth.tsx","ui/CalendarHeader.tsx","ui/CalendarNavigation.tsx","ui/Calendar.tsx","App.tsx","index.tsx"],"names":["Year","year","_this","this","Object","classCallCheck","asNumber","isLeapYear","getCurrentYear","Date","getFullYear","CalendarOptions","START_CALENDAR_HEADER_ON","Day","month","day","getDayOfTheWeek","toDate","getDay","isFirstOfMonth","isLastOfMonth","getNumberOfDays","getMonth","getYear","isToday","now","getDate","UTC","Month","Days","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","asString","getFirstDayOfWeek","getLastDayOfWeek","Months","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","indexOf","Error","getDays","size","startAt","arguments","length","undefined","toConsumableArray","Array","keys","map","i","parseInt","range","d","getNextMonth","nextMonthYear","nextMonth","getPreviousMonth","getCurrentMonth","Color","red","green","blue","alpha","lighten","value","darken","toCssString","concat","RED","GREEN","BLUE","GRAY","fromHexString","hexString","substr","fromString","str","hash","charCodeAt","colour","toString","stringToHexColour","Entry","startDate","endDate","location","getColor","fromRAW","raw","DataGetter","getData","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","cache","then","response","json","jsonData","deserializeData","stop","data","data_DataStore","DataStore","init","dataGetter","doCallbacks","onDataReady","callback","doCallback","callbacks","push","getEntriesForDate","date","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","entry","getTime","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","callbackLock","Locations","props","possibleConstructorReturn","getPrototypeOf","call","locations","list","react","key","style","position","React","CalendarBlock","getState","entries","computeGradient","percentageIncrementor","state","gradualPercentage","isFirst","previousProps","setState","todayClassName","react_default","createElement","className","background","Locations_Locations","e","Component","CalendarSpace","CalendarLine","getOffset","firstDay","days","getBuffer","lastDay","renderOffsetBlocks","CalendarSpace_CalendarSpace","renderBufferBlocks","renderDays","CalendarBlock_CalendarBlock","EmptyCalendarLine","renderEmptyLine","height","border","CalendarBody","lines","currentLine","keyCounter","daysOfTheMonth","CalendarLine_CalendarLine","EmptyCalendarLine_EmptyCalendarLine","DaysLegend","renderDay","getOrderedDays","currentDay","dayLegend","orderedDays","CurrentMonth","CalendarHeader","CurrentMonth_CurrentMonth","DaysLegend_DaysLegend","CalendarNavigation","doNextMonth","setMonth","doPreviousMonth","onClick","Calendar","CalendarHeader_CalendarHeader","CalendarBody_CalendarBody","CalendarNavigation_CalendarNavigation","App","loading","_this2","Calendar_Calendar","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.9ff195d0.chunk.js","sourcesContent":["\nexport default class Year{\n    year : number;\n\n    constructor(year : number){\n        this.year = year;\n    }\n\n    static getCurrentYear = () => {\n        return new Year(new Date().getFullYear());\n    }\n\n    asNumber = () => { return this.year; }\n\n    isLeapYear = () => {\n        return (this.year % 4 === 0 && this.year%100 !== 0) \n                || (this.year%100 === 0 && this.year%400 === 0);\n    }\n}","import { Days } from \"./time/Day\";\n\nexport default class CalendarOptions{\n    static START_CALENDAR_HEADER_ON = 1; // MONDAY\n}","import Year from \"./Year\";\nimport Month, { Months } from \"./Month\";\nimport CalendarOptions from \"../CalendarOptions\";\n\nexport default class Day{\n    private year : Year;\n    private month : Month;\n    private day : number;\n\n    constructor(year : number, month : number, day : number){\n        this.year = new Year(year);\n        this.month = new Month(year, month);\n        this.day = day;\n    }\n\n    getDayOfTheWeek = () => {\n        return this.toDate().getDay();\n    }\n\n    isFirstOfMonth = () => {\n        return this.day === 1;\n    }\n\n    isLastOfMonth = () => {\n        return this.day === this.month.getNumberOfDays();\n    }\n\n    asNumber = () => {\n        return this.day;\n    }\n\n    getMonth = () => {\n        return this.month;\n    }\n\n    getYear = () => {\n        return this.year;\n    }\n\n    isToday = () => {\n        const now = new Date();\n        return now.getFullYear() === this.year.asNumber()\n                && now.getMonth() === this.month.asNumber()\n                && now.getDate() === this.day;\n    }\n\n    toDate = () => {\n        return new Date(Date.UTC(this.year.asNumber(), this.month.asNumber(), this.day));\n    }\n}\n\nexport const Days = {\n    SUNDAY      : 0,\n    MONDAY      : 1,\n    TUESDAY     : 2,\n    WEDNESDAY   : 3,\n    THURSDAY    : 4,\n    FRIDAY      : 5,\n    SATURDAY    : 6,\n\n    asString : (day : number) => {\n        switch(day){\n            case Days.MONDAY :\n                return \"Monday\";\n            case Days.TUESDAY :\n                return \"Tuesday\";\n            case Days.WEDNESDAY :\n                return \"Wednesday\";\n            case Days.THURSDAY :\n                return \"Thursday\";\n            case Days.FRIDAY :\n                return \"Friday\";\n            case Days.SATURDAY :\n                return \"Saturday\";\n            case Days.SUNDAY :\n                return \"Sunday\";\n        }\n    },\n\n    getFirstDayOfWeek : () => {\n        return CalendarOptions.START_CALENDAR_HEADER_ON;\n    },\n\n    getLastDayOfWeek : () => {\n        return (Days.getFirstDayOfWeek() + 6) % 7;\n    },\n}","import Year from \"./Year\";\nimport { range } from \"../../business/utility/Util\";\nimport Day from \"./Day\";\n\nexport default class Month{\n    private year : Year;\n    private month : number;\n\n    constructor(year : number, month : number){\n        this.year = new Year(year);\n        this.month = month;\n    }\n\n    static getCurrentMonth = () => {\n        const now = new Date();\n        return new Month(now.getFullYear(), now.getMonth());\n    }\n\n    public asNumber = () => {\n        return this.month;\n    }\n\n    public asString = () => {\n        switch(this.month){\n            case Months.JANUARY:\n                return \"January\";\n            case Months.FEBRUARY:\n                return \"February\";\n            case Months.MARCH:\n                return \"March\";\n            case Months.APRIL:\n                return \"April\";\n            case Months.MAY:\n                return \"May\";\n            case Months.JUNE:\n                return \"June\";\n            case Months.JULY:\n                return \"July\";\n            case Months.AUGUST:\n                return \"August\";\n            case Months.SEPTEMBER:\n                return \"September\";\n            case Months.OCTOBER:\n                return \"October\";\n            case Months.NOVEMBER:\n                return \"November\";\n            case Months.DECEMBER:\n                return \"December\";\n        }\n    }\n\n    public getNumberOfDays = () => {\n        const days31 = [0, 2, 4, 6, 7, 9, 11];\n        const days30 = [3, 5, 8, 10];\n        if(this.month === Months.FEBRUARY){\n            if(this.year.isLeapYear()){\n                return 29;\n            }\n            else{\n                return 28;\n            }\n        }\n        if(days31.indexOf(this.month) > -1){\n            return 31;\n        }\n        if(days30.indexOf(this.month) > -1){\n            return 30;\n        }\n        throw new Error(\"Unreachable code\");\n    }\n\n    public getDays = () => {\n        return range(this.getNumberOfDays(), 1)\n            .map(d => new Day(this.year.asNumber(), this.month, d));\n    }\n\n    public getYear = () => {\n        return this.year;\n    }\n\n    public getNextMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month + 1;\n        if(nextMonth > Months.DECEMBER){\n            nextMonth = Months.JANUARY;\n            nextMonthYear += 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public getPreviousMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month - 1;\n        if(nextMonth < Months.JANUARY){\n            nextMonth = Months.DECEMBER;\n            nextMonthYear -= 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n}\n\nexport const Months = {\n    JANUARY     : 0,\n    FEBRUARY    : 1,\n    MARCH       : 2,\n    APRIL       : 3,\n    MAY         : 4,\n    JUNE        : 5,\n    JULY        : 6,\n    AUGUST      : 7,\n    SEPTEMBER   : 8,\n    OCTOBER     : 9,\n    NOVEMBER    : 10,\n    DECEMBER    : 11,\n}","export function range(size : number, startAt = 0) {\n    return [...(Array(size) as any).keys()].map(i => parseInt(i) + startAt);\n}\n\n// From https://stackoverflow.com/a/16348977\nexport function stringToHexColour(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF;\n        colour += ('00' + value.toString(16)).substr(-2);\n    }\n    return colour;\n}","import { stringToHexColour } from \"../business/utility/Util\";\n\nexport default class Color{\n    red : number;\n    green : number;\n    blue : number;\n    alpha : number;\n\n    constructor(red : number, green : number, blue : number, alpha : number){\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n\n    lighten = (value : number) => {\n        const red = (this.red + value <= 255)?(this.red + value):(255);\n        const green = (this.green + value <= 255)?(this.green + value):(255);\n        const blue = (this.blue + value <= 255)?(this.blue + value):(255);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    darken = (value : number) => {\n        const red = (this.red - value >= 0)?(this.red - value):(0);\n        const green = (this.green - value >= 0)?(this.green - value):(0);\n        const blue = (this.blue - value >= 0)?(this.blue - value):(0);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    toCssString = () => {\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    }\n\n    static RED = new Color(255, 0, 0, 1);\n    static GREEN = new Color(0, 255, 0, 1);\n    static BLUE = new Color(0, 0, 255, 1);\n    static GRAY = new Color(128, 128, 128, 1);\n\n    static fromHexString = (hexString : string) => {\n        const red = parseInt(hexString.substr(1, 2), 16);\n        const green = parseInt(hexString.substr(3, 2), 16);\n        const blue = parseInt(hexString.substr(5, 2), 16);\n        return new Color(red, green, blue, 1);\n    }\n\n    static fromString = (str : string) => {\n        return Color.fromHexString(stringToHexColour(str));\n    }\n}","import EntryRaw from \"./EntryRaw\";\nimport Color from \"../Color\";\n\nexport default class Entry{\n    startDate : Date;\n    endDate : Date;\n    location : string;\n\n    constructor(startDate : Date, endDate : Date, location : string){\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.location = location;\n    }\n\n    getColor = () => {\n        return Color.fromString(this.location);\n    }\n\n    static fromRAW = (raw : EntryRaw) => {\n        return new Entry(\n            new Date(raw.startDate),\n            new Date(raw.endDate),\n            raw.location\n        );\n    }\n}","import EntryRaw from \"../../model/data/EntryRaw\";\nimport Entry from \"../../model/data/Entry\";\n\n//const DATA_SRC = \"https://pastebin.com/raw/n2s9hVky\";\nconst DATA_SRC = \"https://gist.githubusercontent.com/mark-poussard/a43eade3e2426b64ca97932a23748fe8/raw/calendar.json\"\n\nexport default class DataGetter{\n    getData = async () => {\n        return fetch(DATA_SRC, {cache: \"no-store\"})\n            .then(response => response.json())\n            .then(jsonData => this.deserializeData(jsonData))\n    }\n\n    deserializeData = (data : EntryRaw[]) : Entry[] => {\n        return data.map(raw => Entry.fromRAW(raw));\n    }\n}","import Entry from \"../../model/data/Entry\";\nimport DataGetter from \"./DataGetter\";\n\nclass DataStore{\n\n    private data : Entry[] | undefined;\n    private dataGetter : DataGetter;\n    private callbacks : (() => void)[];\n    private callbackLock : boolean;\n\n    constructor(){\n        this.dataGetter = new DataGetter();\n        this.callbacks = [];\n        this.callbackLock = false;\n    }\n\n    init = () => {\n        this.dataGetter.getData()\n            .then(data => this.data = data)\n            .then(this.doCallbacks);\n    }\n\n    onDataReady = (callback : () => void) => {\n        if(this.data != null){\n            this.doCallback(callback);\n        }\n        else{\n            this.callbacks.push(callback);\n        }\n    }\n\n    getEntriesForDate = (date : Date) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            if(date.getTime() >= entry.startDate.getTime()\n                && date.getTime() <= entry.endDate.getTime()){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    private doCallbacks = () => {\n        for(let callback of this.callbacks){\n            this.doCallback(callback);\n        }\n        this.callbacks = [];\n    }\n\n    private doCallback = (callback : () => void) => {\n        if(this.callbackLock){\n            throw new Error(\"Can't call a callback in a callback\");\n        }\n        this.callbackLock = true;\n        callback();\n        this.callbackLock = false;\n    }\n}\n\nexport default new DataStore();","import * as React from 'react';\n\ninterface ILocationsProps{\n    locations : string[];\n}\n\nexport default class Locations extends React.Component<ILocationsProps>{\n    constructor(props : ILocationsProps){\n        super(props);\n    }\n\n    render(){\n        if(this.props.locations.length === 0){\n            return null;\n        }\n        const list : JSX.Element[] = [];\n        for(let location of this.props.locations){\n            list.push(\n                <div key={`LIST_LOCATION_${location}`}>\n                    {location}\n                </div>\n            );\n        }\n        return (\n            <div style={{position: \"absolute\"}}>\n                {list}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport DataStore from '../business/data/DataStore';\nimport Locations from './Locations';\nimport Entry from '../model/data/Entry';\n\ninterface ICalendarBlockProps{\n    day : Day;\n}\n\ninterface ICalendarBlockState{\n    entries : Entry[];\n}\n\nexport default class CalendarBlock extends React.Component<ICalendarBlockProps, ICalendarBlockState>{\n    constructor(props : ICalendarBlockProps){\n        super(props);\n\n        this.state = this.getState();\n    }\n\n    getState = () => {\n        return {\n            entries : DataStore.getEntriesForDate(this.props.day.toDate())\n        };\n    }\n\n    componentDidUpdate(previousProps : ICalendarBlockProps){\n        if (previousProps.day.toDate().getTime() !== this.props.day.toDate().getTime()){\n            this.setState(this.getState());\n        }\n    }\n\n    render(){\n        const todayClassName = (this.props.day.isToday()) ? \"today\" : \"\";\n\n        return (\n            <div className={`calendar-grid-item calendar-block ${todayClassName}`}\n                style={{background : this.computeGradient()}}>\n                {this.props.day.asNumber()}\n                <Locations locations={this.state.entries.map(e => e.location)} />\n            </div>\n        );\n    }\n\n    computeGradient = () => {\n        let result = \"linear-gradient(\";\n        const percentageIncrementor = 100 / this.state.entries.length;\n        let gradualPercentage = 0;\n        let isFirst = true;\n        for(let entry of this.state.entries){\n            if(!isFirst){\n                result += \", \";\n            }\n            result += entry.getColor().toCssString() + \" \" + gradualPercentage + \"%\"\n                    + \", \" + entry.getColor().toCssString() \n                        + \" \" + (gradualPercentage + percentageIncrementor) + \"%\";\n            gradualPercentage += percentageIncrementor;\n            isFirst = false;\n        }\n        result += \")\";\n        return result;\n    }\n}","import React from 'react';\n\nexport default class CalendarSpace extends React.Component{\n    render(){\n        return(\n            <div className={`calendar-grid-item`}>\n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport CalendarOptions from '../model/CalendarOptions';\nimport CalendarBlock from './CalendarBlock';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarLineProps{\n    days : Day[];\n}\n\nexport default class CalendarLine extends React.Component<ICalendarLineProps>{\n    constructor(props : ICalendarLineProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.renderOffsetBlocks()}\n                {this.renderDays()}\n                {this.renderBufferBlocks()}\n            </div>\n        );\n    }\n\n    getOffset = () => {\n        const firstDay = this.props.days[0];\n        if(firstDay.isFirstOfMonth()){\n            return ((firstDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON)%7+7)%7;\n        }\n        return 0;\n    }\n\n    getBuffer = () => {\n        const lastDay = this.props.days[this.props.days.length-1];\n        if(lastDay.isLastOfMonth()){\n            return ((8 - lastDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON) % 7 + 7) % 7;\n        }\n        return 0;\n    }\n\n    renderOffsetBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getOffset(); i++){\n            result.push(<CalendarSpace key={`OFFSET_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderBufferBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getBuffer(); i++){\n            result.push(<CalendarSpace key={`BUFFER_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderDays = () => {\n        const result : JSX.Element[] = [];\n        for(let day of this.props.days){\n            result.push(<CalendarBlock key={`${day.getYear().asNumber()}-${day.getMonth().asNumber()}-${day.asNumber()}`} day={day}/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport CalendarSpace from './CalendarSpace';\n\nexport default class EmptyCalendarLine extends React.Component{\n    render(){\n        return(\n            <div style={{height: \"9vw\", border:\"transparent 1px solid\"}}>\n                {this.renderEmptyLine()}\n            </div>\n        )\n    }\n\n    renderEmptyLine = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<7; i++){\n            result.push(<CalendarSpace/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport Day, { Days } from '../model/time/Day';\nimport CalendarLine from './CalendarLine';\nimport EmptyCalendarLine from './EmptyCalendarLine';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarBodyProps{\n    month : Month;\n}\n\ninterface ICalendarBodyState{\n\n}\n\nexport default class CalendarBody extends React.Component<ICalendarBodyProps, ICalendarBodyState>{\n    constructor(props : ICalendarBodyProps){\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        const lines : JSX.Element[] = [];\n        let currentLine : Day[] = [];\n        let keyCounter = 0;\n        const daysOfTheMonth = this.props.month.getDays();\n        for(let day of daysOfTheMonth){\n            currentLine.push(day);\n            if(day.getDayOfTheWeek() === Days.getLastDayOfWeek()\n                || day.isLastOfMonth()){\n                lines.push(<CalendarLine key={`CALENDAR_LINE_${keyCounter++}`} days={currentLine}/>)\n                currentLine = [];\n            }\n        }\n\n        if (lines.length < 6) {\n            lines.push(<EmptyCalendarLine/>)\n        }\n        return (\n            <div className={`calendar-body`}>\n                {lines}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CalendarOptions from '../model/CalendarOptions';\nimport { Days } from '../model/time/Day';\n\nexport default class DaysLegend extends React.Component{\n\n    render(){\n        const dayLegend : JSX.Element[] = [];\n        const orderedDays = this.getOrderedDays();\n        for(let day of orderedDays){\n            dayLegend.push(this.renderDay(day));\n        }\n        return (\n            <div>\n                {dayLegend}\n            </div>\n        )\n    }\n\n    renderDay = (day : number) => {\n        return (\n            <div key={`DAY_LEGEND_${day}`} className={`calendar-legend`}>\n                {Days.asString(day)}\n            </div>\n        )\n    }\n\n    getOrderedDays = () => {\n        const result = [];\n        const startAt = CalendarOptions.START_CALENDAR_HEADER_ON;\n        for(let i = 0; i<7; i++){\n            const currentDay = (i+startAt) % 7;\n            result.push(currentDay);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICurrentMonthProps{\n    month : Month;\n}\n\nexport default class CurrentMonth extends React.Component<ICurrentMonthProps>{\n    constructor(props : ICurrentMonthProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.month.asString() + ` `}\n                {this.props.month.getYear().asNumber()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DaysLegend from './DaysLegend';\nimport CurrentMonth from './CurrentMonth';\nimport Month from '../model/time/Month';\n\ninterface ICalendarHeaderProps{\n    month : Month;\n}\n\nexport default class CalendarHeader extends React.Component<ICalendarHeaderProps>{\n    constructor(props:ICalendarHeaderProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={`calendar-header`}>\n                <CurrentMonth month={this.props.month} />\n                <DaysLegend />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICalendarNavigationProps {\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\nexport default class CalendarNavigation extends React.Component<ICalendarNavigationProps>{\n    constructor(props : ICalendarNavigationProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                <a onClick={this.doPreviousMonth}>Previous month</a>\n                <a onClick={this.doNextMonth}>Next month</a>\n            </div>\n        )\n    }\n\n    doNextMonth = () => {\n        this.props.setMonth(this.props.month.getNextMonth());\n    }\n\n    doPreviousMonth = () => {\n        this.props.setMonth(this.props.month.getPreviousMonth());\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport CalendarBody from './CalendarBody';\nimport CalendarHeader from './CalendarHeader';\nimport CalendarNavigation from './CalendarNavigation';\nimport './Calendar.css';\n\ninterface ICalendarProps{\n    \n}\n\ninterface ICalendarState{\n    month : Month;\n}\n\nexport default class Calendar extends React.Component<ICalendarProps, ICalendarState>{\n    constructor(props : ICalendarProps){\n        super(props);\n\n        this.state = {\n            month : Month.getCurrentMonth()\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <CalendarHeader month={this.state.month} />\n                <CalendarBody month={this.state.month} />\n                <CalendarNavigation month={this.state.month} setMonth={this.setMonth}/>\n            </div>\n        );\n    }\n\n    setMonth = (month : Month) => {\n        this.setState({month});\n    }\n}","import React from 'react';\nimport './App.css';\nimport Calendar from './ui/Calendar';\nimport DataStore from './business/data/DataStore';\n\ninterface IAppProps{\n\n}\n\ninterface IAppState{\n  loading : boolean;\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n  constructor(props : IAppProps){\n    super(props);\n\n    this.state = {\n      loading : true\n    };\n  }\n\n  componentDidMount(){\n    DataStore.init();\n    DataStore.onDataReady(() => this.setState({loading : false}));\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}