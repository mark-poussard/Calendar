{"version":3,"sources":["model/time/Year.ts","model/CalendarOptions.ts","model/time/Day.ts","model/time/Month.ts","business/utility/Util.ts","model/data/Entry.ts","business/data/DataGetter.ts","business/data/DataStore.ts","ui/Locations.tsx","ui/CalendarBlock.tsx","ui/CalendarSpace.tsx","ui/CalendarLine.tsx","ui/EmptyCalendarLine.tsx","ui/CalendarBody.tsx","ui/DaysLegend.tsx","ui/CurrentMonth.tsx","ui/CalendarHeader.tsx","ui/CalendarNavigation.tsx","ui/Calendar.tsx","App.tsx","index.tsx"],"names":["Year","year","_this","this","Object","classCallCheck","asNumber","isLeapYear","getCurrentYear","Date","getFullYear","CalendarOptions","START_CALENDAR_HEADER_ON","Day","month","day","getDayOfTheWeek","toDate","getDay","isFirstOfMonth","isLastOfMonth","getNumberOfDays","isToday","now","getMonth","getDate","UTC","Month","Days","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","asString","getFirstDayOfWeek","getLastDayOfWeek","Months","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","indexOf","Error","getDays","size","startAt","arguments","length","undefined","toConsumableArray","Array","keys","map","i","parseInt","range","d","getYear","getNextMonth","nextMonthYear","nextMonth","getPreviousMonth","getCurrentMonth","Entry","startDate","endDate","location","fromRAW","raw","DataGetter","getData","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","cache","then","response","json","jsonData","deserializeData","stop","data","data_DataStore","DataStore","init","dataGetter","doCallbacks","onDataReady","callback","doCallback","callbacks","push","getLocationsForDate","date","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","entry","value","getTime","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","callbackLock","Locations","props","possibleConstructorReturn","getPrototypeOf","call","locations","list","react","key","concat","style","position","React","CalendarBlock","state","previousProps","setState","todayClassName","react_default","createElement","className","Locations_Locations","Component","CalendarSpace","CalendarLine","getOffset","firstDay","days","getBuffer","lastDay","renderOffsetBlocks","CalendarSpace_CalendarSpace","renderBufferBlocks","renderDays","CalendarBlock_CalendarBlock","EmptyCalendarLine","renderEmptyLine","height","border","CalendarBody","lines","currentLine","keyCounter","daysOfTheMonth","CalendarLine_CalendarLine","EmptyCalendarLine_EmptyCalendarLine","DaysLegend","renderDay","getOrderedDays","currentDay","dayLegend","orderedDays","CurrentMonth","CalendarHeader","CurrentMonth_CurrentMonth","DaysLegend_DaysLegend","CalendarNavigation","doNextMonth","setMonth","doPreviousMonth","onClick","Calendar","CalendarHeader_CalendarHeader","CalendarBody_CalendarBody","CalendarNavigation_CalendarNavigation","App","loading","_this2","Calendar_Calendar","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.032d71c6.chunk.js","sourcesContent":["\nexport default class Year{\n    year : number;\n\n    constructor(year : number){\n        this.year = year;\n    }\n\n    static getCurrentYear = () => {\n        return new Year(new Date().getFullYear());\n    }\n\n    asNumber = () => { return this.year; }\n\n    isLeapYear = () => {\n        return (this.year % 4 === 0 && this.year%100 !== 0) \n                || (this.year%100 === 0 && this.year%400 === 0);\n    }\n}","import { Days } from \"./time/Day\";\n\nexport default class CalendarOptions{\n    static START_CALENDAR_HEADER_ON = 1; // MONDAY\n}","import Year from \"./Year\";\nimport Month, { Months } from \"./Month\";\nimport CalendarOptions from \"../CalendarOptions\";\n\nexport default class Day{\n    private year : Year;\n    private month : Month;\n    private day : number;\n\n    constructor(year : number, month : number, day : number){\n        this.year = new Year(year);\n        this.month = new Month(year, month);\n        this.day = day;\n    }\n\n    getDayOfTheWeek = () => {\n        return this.toDate().getDay();\n    }\n\n    isFirstOfMonth = () => {\n        return this.day === 1;\n    }\n\n    isLastOfMonth = () => {\n        return this.day === this.month.getNumberOfDays();\n    }\n\n    asNumber = () => {\n        return this.day;\n    }\n\n    isToday = () => {\n        const now = new Date();\n        return now.getFullYear() === this.year.asNumber()\n                && now.getMonth() === this.month.asNumber()\n                && now.getDate() === this.day;\n    }\n\n    toDate = () => {\n        return new Date(Date.UTC(this.year.asNumber(), this.month.asNumber(), this.day));\n    }\n}\n\nexport const Days = {\n    SUNDAY      : 0,\n    MONDAY      : 1,\n    TUESDAY     : 2,\n    WEDNESDAY   : 3,\n    THURSDAY    : 4,\n    FRIDAY      : 5,\n    SATURDAY    : 6,\n\n    asString : (day : number) => {\n        switch(day){\n            case Days.MONDAY :\n                return \"Monday\";\n            case Days.TUESDAY :\n                return \"Tuesday\";\n            case Days.WEDNESDAY :\n                return \"Wednesday\";\n            case Days.THURSDAY :\n                return \"Thursday\";\n            case Days.FRIDAY :\n                return \"Friday\";\n            case Days.SATURDAY :\n                return \"Saturday\";\n            case Days.SUNDAY :\n                return \"Sunday\";\n        }\n    },\n\n    getFirstDayOfWeek : () => {\n        return CalendarOptions.START_CALENDAR_HEADER_ON;\n    },\n\n    getLastDayOfWeek : () => {\n        return (Days.getFirstDayOfWeek() + 6) % 7;\n    },\n}","import Year from \"./Year\";\nimport { range } from \"../../business/utility/Util\";\nimport Day from \"./Day\";\n\nexport default class Month{\n    private year : Year;\n    private month : number;\n\n    constructor(year : number, month : number){\n        this.year = new Year(year);\n        this.month = month;\n    }\n\n    static getCurrentMonth = () => {\n        const now = new Date();\n        return new Month(now.getFullYear(), now.getMonth());\n    }\n\n    public asNumber = () => {\n        return this.month;\n    }\n\n    public asString = () => {\n        switch(this.month){\n            case Months.JANUARY:\n                return \"January\";\n            case Months.FEBRUARY:\n                return \"February\";\n            case Months.MARCH:\n                return \"March\";\n            case Months.APRIL:\n                return \"April\";\n            case Months.MAY:\n                return \"May\";\n            case Months.JUNE:\n                return \"June\";\n            case Months.JULY:\n                return \"July\";\n            case Months.AUGUST:\n                return \"August\";\n            case Months.SEPTEMBER:\n                return \"September\";\n            case Months.OCTOBER:\n                return \"October\";\n            case Months.NOVEMBER:\n                return \"November\";\n            case Months.DECEMBER:\n                return \"December\";\n        }\n    }\n\n    public getNumberOfDays = () => {\n        const days31 = [0, 2, 4, 6, 7, 9, 11];\n        const days30 = [3, 5, 8, 10];\n        if(this.month === Months.FEBRUARY){\n            if(this.year.isLeapYear()){\n                return 29;\n            }\n            else{\n                return 28;\n            }\n        }\n        if(days31.indexOf(this.month) > -1){\n            return 31;\n        }\n        if(days30.indexOf(this.month) > -1){\n            return 30;\n        }\n        throw new Error(\"Unreachable code\");\n    }\n\n    public getDays = () => {\n        return range(this.getNumberOfDays(), 1)\n            .map(d => new Day(this.year.asNumber(), this.month, d));\n    }\n\n    public getYear = () => {\n        return this.year;\n    }\n\n    public getNextMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month + 1;\n        if(nextMonth > Months.DECEMBER){\n            nextMonth = Months.JANUARY;\n            nextMonthYear += 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public getPreviousMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month - 1;\n        if(nextMonth < Months.JANUARY){\n            nextMonth = Months.DECEMBER;\n            nextMonthYear -= 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n}\n\nexport const Months = {\n    JANUARY     : 0,\n    FEBRUARY    : 1,\n    MARCH       : 2,\n    APRIL       : 3,\n    MAY         : 4,\n    JUNE        : 5,\n    JULY        : 6,\n    AUGUST      : 7,\n    SEPTEMBER   : 8,\n    OCTOBER     : 9,\n    NOVEMBER    : 10,\n    DECEMBER    : 11,\n}","export function range(size : number, startAt = 0) {\n    return [...(Array(size) as any).keys()].map(i => parseInt(i) + startAt);\n}","import EntryRaw from \"./EntryRaw\";\n\nexport default class Entry{\n    startDate : Date;\n    endDate : Date;\n    location : string;\n\n    constructor(startDate : Date, endDate : Date, location : string){\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.location = location;\n    }\n\n    static fromRAW = (raw : EntryRaw) => {\n        return new Entry(\n            new Date(raw.startDate),\n            new Date(raw.endDate),\n            raw.location\n        );\n    }\n}","import EntryRaw from \"../../model/data/EntryRaw\";\nimport Entry from \"../../model/data/Entry\";\n\n//const DATA_SRC = \"https://pastebin.com/raw/n2s9hVky\";\nconst DATA_SRC = \"https://gist.githubusercontent.com/mark-poussard/a43eade3e2426b64ca97932a23748fe8/raw/calendar.json\"\n\nexport default class DataGetter{\n    getData = async () => {\n        return fetch(DATA_SRC, {cache: \"no-store\"})\n            .then(response => response.json())\n            .then(jsonData => this.deserializeData(jsonData))\n    }\n\n    deserializeData = (data : EntryRaw[]) : Entry[] => {\n        return data.map(raw => Entry.fromRAW(raw));\n    }\n}","import Entry from \"../../model/data/Entry\";\nimport DataGetter from \"./DataGetter\";\n\nclass DataStore{\n\n    private data : Entry[] | undefined;\n    private dataGetter : DataGetter;\n    private callbacks : (() => void)[];\n    private callbackLock : boolean;\n\n    constructor(){\n        this.dataGetter = new DataGetter();\n        this.callbacks = [];\n        this.callbackLock = false;\n    }\n\n    init = () => {\n        this.dataGetter.getData()\n            .then(data => this.data = data)\n            .then(this.doCallbacks);\n    }\n\n    onDataReady = (callback : () => void) => {\n        if(this.data != null){\n            this.doCallback(callback);\n        }\n        else{\n            this.callbacks.push(callback);\n        }\n    }\n\n    getLocationsForDate = (date : Date) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            if(date.getTime() >= entry.startDate.getTime()\n                && date.getTime() <= entry.endDate.getTime()){\n                result.push(entry.location);\n            }\n        }\n        return result;\n    }\n\n    private doCallbacks = () => {\n        for(let callback of this.callbacks){\n            this.doCallback(callback);\n        }\n        this.callbacks = [];\n    }\n\n    private doCallback = (callback : () => void) => {\n        if(this.callbackLock){\n            throw new Error(\"Can't call a callback in a callback\");\n        }\n        this.callbackLock = true;\n        callback();\n        this.callbackLock = false;\n    }\n}\n\nexport default new DataStore();","import * as React from 'react';\n\ninterface ILocationsProps{\n    locations : string[];\n}\n\nexport default class Locations extends React.Component<ILocationsProps>{\n    constructor(props : ILocationsProps){\n        super(props);\n    }\n\n    render(){\n        if(this.props.locations.length === 0){\n            return null;\n        }\n        const list : JSX.Element[] = [];\n        for(let location of this.props.locations){\n            list.push(\n                <div key={`LIST_LOCATION_${location}`}>\n                    {location}\n                </div>\n            );\n        }\n        return (\n            <div style={{position: \"absolute\"}}>\n                {list}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport DataStore from '../business/data/DataStore';\nimport Locations from './Locations';\n\ninterface ICalendarBlockProps{\n    day : Day;\n}\n\ninterface ICalendarBlockState{\n    locations : string[];\n}\n\nexport default class CalendarBlock extends React.Component<ICalendarBlockProps, ICalendarBlockState>{\n    constructor(props : ICalendarBlockProps){\n        super(props);\n\n        this.state = {\n            locations : DataStore.getLocationsForDate(this.props.day.toDate())\n        };\n    }\n\n    componentDidUpdate(previousProps : ICalendarBlockProps){\n        if (previousProps.day.toDate().getTime() !== this.props.day.toDate().getTime()){\n            this.setState(\n                {\n                    locations : DataStore.getLocationsForDate(this.props.day.toDate())\n                }\n            );\n        }\n    }\n\n    render(){\n        const todayClassName = (this.props.day.isToday()) ? \"today\" : \"\";\n\n        return (\n            <div className={`calendar-grid-item calendar-block ${todayClassName}`}>\n                {this.props.day.asNumber()}\n                <Locations locations={this.state.locations} />\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class CalendarSpace extends React.Component{\n    render(){\n        return(\n            <div className={`calendar-grid-item`}>\n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport CalendarOptions from '../model/CalendarOptions';\nimport CalendarBlock from './CalendarBlock';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarLineProps{\n    days : Day[];\n}\n\nexport default class CalendarLine extends React.Component<ICalendarLineProps>{\n    constructor(props : ICalendarLineProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.renderOffsetBlocks()}\n                {this.renderDays()}\n                {this.renderBufferBlocks()}\n            </div>\n        );\n    }\n\n    getOffset = () => {\n        const firstDay = this.props.days[0];\n        if(firstDay.isFirstOfMonth()){\n            return ((firstDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON)%7+7)%7;\n        }\n        return 0;\n    }\n\n    getBuffer = () => {\n        const lastDay = this.props.days[this.props.days.length-1];\n        if(lastDay.isLastOfMonth()){\n            return ((8 - lastDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON) % 7 + 7) % 7;\n        }\n        return 0;\n    }\n\n    renderOffsetBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getOffset(); i++){\n            result.push(<CalendarSpace key={`OFFSET_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderBufferBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getBuffer(); i++){\n            result.push(<CalendarSpace key={`BUFFER_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderDays = () => {\n        const result : JSX.Element[] = [];\n        for(let day of this.props.days){\n            result.push(<CalendarBlock key={`DAY_${day.asNumber()}`} day={day}/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport CalendarSpace from './CalendarSpace';\n\nexport default class EmptyCalendarLine extends React.Component{\n    render(){\n        return(\n            <div style={{height: \"9vw\", border:\"transparent 1px solid\"}}>\n                {this.renderEmptyLine()}\n            </div>\n        )\n    }\n\n    renderEmptyLine = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<7; i++){\n            result.push(<CalendarSpace/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport Day, { Days } from '../model/time/Day';\nimport CalendarLine from './CalendarLine';\nimport EmptyCalendarLine from './EmptyCalendarLine';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarBodyProps{\n    month : Month;\n}\n\ninterface ICalendarBodyState{\n\n}\n\nexport default class CalendarBody extends React.Component<ICalendarBodyProps, ICalendarBodyState>{\n    constructor(props : ICalendarBodyProps){\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        const lines : JSX.Element[] = [];\n        let currentLine : Day[] = [];\n        let keyCounter = 0;\n        const daysOfTheMonth = this.props.month.getDays();\n        for(let day of daysOfTheMonth){\n            currentLine.push(day);\n            if(day.getDayOfTheWeek() === Days.getLastDayOfWeek()\n                || day.isLastOfMonth()){\n                lines.push(<CalendarLine key={`CALENDAR_LINE_${keyCounter++}`} days={currentLine}/>)\n                currentLine = [];\n            }\n        }\n\n        if (lines.length < 6) {\n            lines.push(<EmptyCalendarLine/>)\n        }\n        return (\n            <div className={`calendar-body`}>\n                {lines}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CalendarOptions from '../model/CalendarOptions';\nimport { Days } from '../model/time/Day';\n\nexport default class DaysLegend extends React.Component{\n\n    render(){\n        const dayLegend : JSX.Element[] = [];\n        const orderedDays = this.getOrderedDays();\n        for(let day of orderedDays){\n            dayLegend.push(this.renderDay(day));\n        }\n        return (\n            <div>\n                {dayLegend}\n            </div>\n        )\n    }\n\n    renderDay = (day : number) => {\n        return (\n            <div key={`DAY_LEGEND_${day}`} className={`calendar-legend`}>\n                {Days.asString(day)}\n            </div>\n        )\n    }\n\n    getOrderedDays = () => {\n        const result = [];\n        const startAt = CalendarOptions.START_CALENDAR_HEADER_ON;\n        for(let i = 0; i<7; i++){\n            const currentDay = (i+startAt) % 7;\n            result.push(currentDay);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICurrentMonthProps{\n    month : Month;\n}\n\nexport default class CurrentMonth extends React.Component<ICurrentMonthProps>{\n    constructor(props : ICurrentMonthProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.month.asString() + ` `}\n                {this.props.month.getYear().asNumber()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DaysLegend from './DaysLegend';\nimport CurrentMonth from './CurrentMonth';\nimport Month from '../model/time/Month';\n\ninterface ICalendarHeaderProps{\n    month : Month;\n}\n\nexport default class CalendarHeader extends React.Component<ICalendarHeaderProps>{\n    constructor(props:ICalendarHeaderProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={`calendar-header`}>\n                <CurrentMonth month={this.props.month} />\n                <DaysLegend />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICalendarNavigationProps {\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\nexport default class CalendarNavigation extends React.Component<ICalendarNavigationProps>{\n    constructor(props : ICalendarNavigationProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                <a onClick={this.doPreviousMonth}>Previous month</a>\n                <a onClick={this.doNextMonth}>Next month</a>\n            </div>\n        )\n    }\n\n    doNextMonth = () => {\n        this.props.setMonth(this.props.month.getNextMonth());\n    }\n\n    doPreviousMonth = () => {\n        this.props.setMonth(this.props.month.getPreviousMonth());\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport CalendarBody from './CalendarBody';\nimport CalendarHeader from './CalendarHeader';\nimport CalendarNavigation from './CalendarNavigation';\nimport './Calendar.css';\n\ninterface ICalendarProps{\n    \n}\n\ninterface ICalendarState{\n    month : Month;\n}\n\nexport default class Calendar extends React.Component<ICalendarProps, ICalendarState>{\n    constructor(props : ICalendarProps){\n        super(props);\n\n        this.state = {\n            month : Month.getCurrentMonth()\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <CalendarHeader month={this.state.month} />\n                <CalendarBody month={this.state.month} />\n                <CalendarNavigation month={this.state.month} setMonth={this.setMonth}/>\n            </div>\n        );\n    }\n\n    setMonth = (month : Month) => {\n        this.setState({month});\n    }\n}","import React from 'react';\nimport './App.css';\nimport Calendar from './ui/Calendar';\nimport DataStore from './business/data/DataStore';\n\ninterface IAppProps{\n\n}\n\ninterface IAppState{\n  loading : boolean;\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n  constructor(props : IAppProps){\n    super(props);\n\n    this.state = {\n      loading : true\n    };\n  }\n\n  componentDidMount(){\n    DataStore.init();\n    DataStore.onDataReady(() => this.setState({loading : false}));\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}