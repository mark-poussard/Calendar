{"version":3,"sources":["model/Color.ts","business/utility/Util.ts","model/data/Entry.ts","business/data/DataGetter.ts","business/data/DataStore.ts","model/time/Year.ts","model/time/Month.ts","model/CalendarOptions.ts","model/time/Day.ts","ui/CalendarBlock.tsx","ui/CalendarSpace.tsx","ui/CalendarLine.tsx","ui/EmptyCalendarLine.tsx","ui/CalendarBody.tsx","ui/DaysLegend.tsx","ui/CurrentMonth.tsx","ui/CalendarNavigation.tsx","ui/CalendarHeader.tsx","ui/Circle.tsx","ui/MonthRecap.tsx","ui/Screen/Screen.tsx","ui/Calendar.tsx","ui/Home/Home.tsx","App.tsx","index.tsx"],"names":["Color","red","green","blue","alpha","_this","this","Object","classCallCheck","lighten","value","darken","toCssString","concat","RED","GREEN","BLUE","GRAY","COLORS","fromHexString","hexString","parseInt","substr","fromString","str","hash","i","length","charCodeAt","Math","abs","stringToHash","Entry","startDate","endDate","location","getColor","fromRAW","raw","Date","DataGetter","getData","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","cache","then","response","json","jsonData","deserializeData","stop","data","map","data_DataStore","DataStore","init","dataGetter","doCallbacks","onDataReady","callback","doCallback","callbacks","push","getEntriesForDate","date","Error","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","entry","getTime","err","return","getEntriesForMonth","month","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","outsideLeft","getStartDate","outsideRight","getEndDate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","callbackLock","Year","year","asNumber","isLeapYear","equals","that","getCurrentYear","getFullYear","Month","asString","Months","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","getNumberOfDays","indexOf","getDays","size","startAt","arguments","toConsumableArray","Array","keys","range","d","Day","UTC","getYear","getNextMonth","nextMonthYear","nextMonth","getPreviousMonth","getCurrentMonth","now","getMonth","CalendarOptions","START_CALENDAR_HEADER_ON","day","getDayOfTheWeek","toDate","getDay","isFirstOfMonth","isLastOfMonth","isToday","getDate","Days","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","getFirstDayOfWeek","getLastDayOfWeek","CalendarBlock","props","possibleConstructorReturn","getPrototypeOf","call","isFirstOrLastDate","computeGradient","percentageIncrementor","state","entries","gradualPercentage","isFirst","previousProps","setState","_this2","todayClassName","react_default","createElement","className","t","style","backgroundColor","React","Component","CalendarSpace","CalendarLine","getOffset","firstDay","days","getBuffer","lastDay","renderOffsetBlocks","CalendarSpace_CalendarSpace","key","renderBufferBlocks","renderDays","CalendarBlock_CalendarBlock","EmptyCalendarLine","renderEmptyLine","height","border","CalendarBody","lines","currentLine","keyCounter","daysOfTheMonth","CalendarLine_CalendarLine","EmptyCalendarLine_EmptyCalendarLine","DaysLegend","renderDay","dayAsString","getOrderedDays","currentDay","dayLegend","orderedDays","monthColor","CurrentMonth","CalendarNavigation","doNextMonth","setMonth","doPreviousMonth","onClick","CalendarHeader","CalendarNavigation_CalendarNavigation","CurrentMonth_CurrentMonth","DaysLegend_DaysLegend","Circle","left","top","bottom","right","getDateWithFormat","MonthRecap","list","slice","v","toUpperCase","Screen","children","Calendar","getMonthColor","color","ui_Screen_Screen","borderBottomColor","src_ui_Circle","src_ui_MonthRecap","CalendarHeader_CalendarHeader","CalendarBody_CalendarBody","Home","borderTopColor","backgroundImage","href","target","App","loading","ui_Home_Home","Calendar_Calendar","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f28f7a79.chunk.js","sourcesContent":["import { stringToHexColour, stringToHash } from \"../business/utility/Util\";\n\nexport default class Color{\n    red : number;\n    green : number;\n    blue : number;\n    alpha : number;\n\n    constructor(red : number, green : number, blue : number, alpha : number){\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n\n    lighten = (value : number) => {\n        const red = (this.red + value <= 255)?(this.red + value):(255);\n        const green = (this.green + value <= 255)?(this.green + value):(255);\n        const blue = (this.blue + value <= 255)?(this.blue + value):(255);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    darken = (value : number) => {\n        const red = (this.red - value >= 0)?(this.red - value):(0);\n        const green = (this.green - value >= 0)?(this.green - value):(0);\n        const blue = (this.blue - value >= 0)?(this.blue - value):(0);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    toCssString = () => {\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    }\n\n    static RED = new Color(255, 0, 0, 1);\n    static GREEN = new Color(0, 255, 0, 1);\n    static BLUE = new Color(0, 0, 255, 1);\n    static GRAY = new Color(128, 128, 128, 1);\n\n    static COLORS = [\n        '--color-pink', '--color-yellow', '--color-green', '--color-purple', '--color-grey', '--color-blue',\n        '--color-manatee', '--color-tumbleweed', '--color-sage', '--color-cadet-grey', '--color-wild-blue-yonder', '--color-peter-blue '\n    ];\n\n    static fromHexString = (hexString : string) => {\n        const red = parseInt(hexString.substr(1, 2), 16);\n        const green = parseInt(hexString.substr(3, 2), 16);\n        const blue = parseInt(hexString.substr(5, 2), 16);\n        return new Color(red, green, blue, 1);\n    }\n\n    static fromString = (str : string) => {\n        const hash = stringToHash(str);\n        return `var(${Color.COLORS[hash % Color.COLORS.length]})`;\n    }\n}","export function range(size : number, startAt = 0) {\n    return [...(Array(size) as any).keys()].map(i => parseInt(i) + startAt);\n}\n\nexport function stringToHash(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return Math.abs(hash);\n}\n\n// From https://stackoverflow.com/a/16348977\nexport function stringToHexColour(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF;\n        colour += ('00' + value.toString(16)).substr(-2);\n    }\n    return colour;\n}","import EntryRaw from \"./EntryRaw\";\nimport Color from \"../Color\";\n\nexport default class Entry{\n    startDate : Date;\n    endDate : Date;\n    location : string;\n\n    constructor(startDate : Date, endDate : Date, location : string){\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.location = location;\n    }\n\n    getColor = () => {\n        return Color.fromString(this.location);\n    }\n\n    static fromRAW = (raw : EntryRaw) => {\n        return new Entry(\n            new Date(raw.startDate),\n            new Date(raw.endDate),\n            raw.location\n        );\n    }\n}","import EntryRaw from \"../../model/data/EntryRaw\";\nimport Entry from \"../../model/data/Entry\";\n\n//const DATA_SRC = \"https://pastebin.com/raw/n2s9hVky\";\nconst DATA_SRC = \"https://gist.githubusercontent.com/mark-poussard/a43eade3e2426b64ca97932a23748fe8/raw/calendar.json\"\n\nexport default class DataGetter{\n    getData = async () => {\n        return fetch(DATA_SRC, {cache: \"no-store\"})\n            .then(response => response.json())\n            .then(jsonData => this.deserializeData(jsonData))\n    }\n\n    deserializeData = (data : EntryRaw[]) : Entry[] => {\n        return data.map(raw => Entry.fromRAW(raw));\n    }\n}","import Entry from \"../../model/data/Entry\";\nimport DataGetter from \"./DataGetter\";\nimport Month from \"../../model/time/Month\";\n\nclass DataStore{\n\n    private data : Entry[] | undefined;\n    private dataGetter : DataGetter;\n    private callbacks : (() => void)[];\n    private callbackLock : boolean;\n\n    constructor(){\n        this.dataGetter = new DataGetter();\n        this.callbacks = [];\n        this.callbackLock = false;\n    }\n\n    init = () => {\n        this.dataGetter.getData()\n            .then(data => this.data = data)\n            .then(this.doCallbacks);\n    }\n\n    onDataReady = (callback : () => void) => {\n        if(this.data != null){\n            this.doCallback(callback);\n        }\n        else{\n            this.callbacks.push(callback);\n        }\n    }\n\n    getEntriesForDate = (date : Date) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            if(date.getTime() >= entry.startDate.getTime()\n                && date.getTime() <= entry.endDate.getTime()){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    getEntriesForMonth = (month : Month) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            const outsideLeft = entry.endDate.getTime() < month.getStartDate().getTime();\n            const outsideRight = entry.startDate.getTime() > month.getEndDate().getTime();\n            if(!outsideLeft && !outsideRight){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    private doCallbacks = () => {\n        for(let callback of this.callbacks){\n            this.doCallback(callback);\n        }\n        this.callbacks = [];\n    }\n\n    private doCallback = (callback : () => void) => {\n        if(this.callbackLock){\n            throw new Error(\"Can't call a callback in a callback\");\n        }\n        this.callbackLock = true;\n        callback();\n        this.callbackLock = false;\n    }\n}\n\nexport default new DataStore();","\nexport default class Year{\n    private year : number;\n\n    constructor(year : number){\n        this.year = year;\n    }\n\n    static getCurrentYear = () => {\n        return new Year(new Date().getFullYear());\n    }\n\n    asNumber = () => { return this.year; }\n\n    isLeapYear = () => {\n        return (this.year % 4 === 0 && this.year%100 !== 0) \n                || (this.year%100 === 0 && this.year%400 === 0);\n    }\n\n    equals = (that : Year) => {\n        return this.year === that.year;\n    }\n}","import Year from \"./Year\";\nimport { range } from \"../../business/utility/Util\";\nimport Day from \"./Day\";\n\nexport default class Month{\n    private year : Year;\n    private month : number;\n\n    constructor(year : number, month : number){\n        this.year = new Year(year);\n        this.month = month;\n    }\n\n    static getCurrentMonth = () => {\n        const now = new Date();\n        return new Month(now.getFullYear(), now.getMonth());\n    }\n\n    public asNumber = () => {\n        return this.month;\n    }\n\n    public asString = () => {\n        switch(this.month){\n            case Months.JANUARY:\n                return \"January\";\n            case Months.FEBRUARY:\n                return \"February\";\n            case Months.MARCH:\n                return \"March\";\n            case Months.APRIL:\n                return \"April\";\n            case Months.MAY:\n                return \"May\";\n            case Months.JUNE:\n                return \"June\";\n            case Months.JULY:\n                return \"July\";\n            case Months.AUGUST:\n                return \"August\";\n            case Months.SEPTEMBER:\n                return \"September\";\n            case Months.OCTOBER:\n                return \"October\";\n            case Months.NOVEMBER:\n                return \"November\";\n            case Months.DECEMBER:\n                return \"December\";\n        }\n    }\n\n    public getNumberOfDays = () => {\n        const days31 = [0, 2, 4, 6, 7, 9, 11];\n        const days30 = [3, 5, 8, 10];\n        if(this.month === Months.FEBRUARY){\n            if(this.year.isLeapYear()){\n                return 29;\n            }\n            else{\n                return 28;\n            }\n        }\n        if(days31.indexOf(this.month) > -1){\n            return 31;\n        }\n        if(days30.indexOf(this.month) > -1){\n            return 30;\n        }\n        throw new Error(\"Unreachable code\");\n    }\n\n    public getDays = () => {\n        return range(this.getNumberOfDays(), 1)\n            .map(d => new Day(this.year.asNumber(), this.month, d));\n    }\n\n    public getStartDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            1));\n    }\n\n    public getEndDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            this.getNumberOfDays()));\n    }\n\n    public getYear = () => {\n        return this.year;\n    }\n\n    public getNextMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month + 1;\n        if(nextMonth > Months.DECEMBER){\n            nextMonth = Months.JANUARY;\n            nextMonthYear += 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public getPreviousMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month - 1;\n        if(nextMonth < Months.JANUARY){\n            nextMonth = Months.DECEMBER;\n            nextMonthYear -= 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public equals = (that : Month) => {\n        return this.month === that.month\n                && this.getYear().equals(that.getYear());\n    }\n}\n\nexport const Months = {\n    JANUARY     : 0,\n    FEBRUARY    : 1,\n    MARCH       : 2,\n    APRIL       : 3,\n    MAY         : 4,\n    JUNE        : 5,\n    JULY        : 6,\n    AUGUST      : 7,\n    SEPTEMBER   : 8,\n    OCTOBER     : 9,\n    NOVEMBER    : 10,\n    DECEMBER    : 11,\n}","import { Days } from \"./time/Day\";\n\nexport default class CalendarOptions{\n    static START_CALENDAR_HEADER_ON = 1; // MONDAY\n}","import Year from \"./Year\";\nimport Month, { Months } from \"./Month\";\nimport CalendarOptions from \"../CalendarOptions\";\n\nexport default class Day{\n    private year : Year;\n    private month : Month;\n    private day : number;\n\n    constructor(year : number, month : number, day : number){\n        this.year = new Year(year);\n        this.month = new Month(year, month);\n        this.day = day;\n    }\n\n    getDayOfTheWeek = () => {\n        return this.toDate().getDay();\n    }\n\n    isFirstOfMonth = () => {\n        return this.day === 1;\n    }\n\n    isLastOfMonth = () => {\n        return this.day === this.month.getNumberOfDays();\n    }\n\n    asNumber = () => {\n        return this.day;\n    }\n\n    getMonth = () => {\n        return this.month;\n    }\n\n    getYear = () => {\n        return this.year;\n    }\n\n    isToday = () => {\n        const now = new Date();\n        return now.getFullYear() === this.year.asNumber()\n                && now.getMonth() === this.month.asNumber()\n                && now.getDate() === this.day;\n    }\n\n    toDate = () => {\n        return new Date(Date.UTC(this.year.asNumber(), this.month.asNumber(), this.day));\n    }\n}\n\nexport const Days = {\n    SUNDAY      : 0,\n    MONDAY      : 1,\n    TUESDAY     : 2,\n    WEDNESDAY   : 3,\n    THURSDAY    : 4,\n    FRIDAY      : 5,\n    SATURDAY    : 6,\n\n    asString : (day : number) => {\n        switch(day){\n            case Days.MONDAY :\n                return \"MON\";\n            case Days.TUESDAY :\n                return \"TUE\";\n            case Days.WEDNESDAY :\n                return \"WED\";\n            case Days.THURSDAY :\n                return \"THU\";\n            case Days.FRIDAY :\n                return \"FRI\";\n            case Days.SATURDAY :\n                return \"SAT\";\n            case Days.SUNDAY :\n                return \"SUN\";\n            default :\n                return \"\";\n        }\n    },\n\n    getFirstDayOfWeek : () => {\n        return CalendarOptions.START_CALENDAR_HEADER_ON;\n    },\n\n    getLastDayOfWeek : () => {\n        return (Days.getFirstDayOfWeek() + 6) % 7;\n    },\n}","import React from 'react';\nimport DataStore from '../business/data/DataStore';\nimport Entry from '../model/data/Entry';\nimport Day from '../model/time/Day';\n\ninterface ICalendarBlockProps{\n    day : Day;\n}\n\ninterface ICalendarBlockState{\n    entries : Entry[];\n}\n\nexport default class CalendarBlock extends React.Component<ICalendarBlockProps, ICalendarBlockState>{\n    mobileModeSubscription ?: number;\n    \n    constructor(props : ICalendarBlockProps){\n        super(props);\n\n        this.state = {\n            entries : DataStore.getEntriesForDate(this.props.day.toDate())\n        };\n    }\n\n    componentDidUpdate(previousProps : ICalendarBlockProps){\n        if (previousProps.day.toDate().getTime() !== this.props.day.toDate().getTime()){\n            this.setState({\n                entries : DataStore.getEntriesForDate(this.props.day.toDate())\n            });\n        }\n    }\n\n    render(){\n        const todayClassName = (this.props.day.isToday()) ? \"today\" : \"\";\n\n        return (\n            <div className={`calendar-grid-item calendar-block ${todayClassName}`}>\n                <div className={'calendar-grid-item-number'}>\n                    {this.props.day.asNumber()}\n                </div>\n                {this.state.entries.map(t => \n                    <div className={`entry ${t.location}`}\n                        style={{backgroundColor : t.getColor()}}>\n                        {this.isFirstOrLastDate(t, this.props.day) && <span className={`location`}>{t.location}</span>}\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    isFirstOrLastDate = (entry : Entry, date : Day) => {\n        if (date.toDate().getTime() == entry.startDate.getTime() || date.toDate().getTime() == entry.endDate.getTime()) {\n            return true;\n        }\n        return false;\n    }\n\n    computeGradient = () => {\n        let result = \"linear-gradient(\";\n        const percentageIncrementor = 100 / this.state.entries.length;\n        let gradualPercentage = 0;\n        let isFirst = true;\n        for(let entry of this.state.entries){\n            if(!isFirst){\n                result += \", \";\n            }\n            result += entry.getColor() + \" \" + gradualPercentage + \"%\"\n                    + \", \" + entry.getColor()\n                        + \" \" + (gradualPercentage + percentageIncrementor) + \"%\";\n            gradualPercentage += percentageIncrementor;\n            isFirst = false;\n        }\n        result += \")\";\n        return result;\n    }\n}","import React from 'react';\n\nexport default class CalendarSpace extends React.Component{\n    render(){\n        return(\n            <div className={`calendar-grid-item`}>\n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport CalendarOptions from '../model/CalendarOptions';\nimport CalendarBlock from './CalendarBlock';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarLineProps{\n    days : Day[];\n}\n\nexport default class CalendarLine extends React.Component<ICalendarLineProps>{\n    constructor(props : ICalendarLineProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.renderOffsetBlocks()}\n                {this.renderDays()}\n                {this.renderBufferBlocks()}\n            </div>\n        );\n    }\n\n    getOffset = () => {\n        const firstDay = this.props.days[0];\n        if(firstDay.isFirstOfMonth()){\n            return ((firstDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON)%7+7)%7;\n        }\n        return 0;\n    }\n\n    getBuffer = () => {\n        const lastDay = this.props.days[this.props.days.length-1];\n        if(lastDay.isLastOfMonth()){\n            return ((8 - lastDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON) % 7 + 7) % 7;\n        }\n        return 0;\n    }\n\n    renderOffsetBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getOffset(); i++){\n            result.push(<CalendarSpace key={`OFFSET_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderBufferBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getBuffer(); i++){\n            result.push(<CalendarSpace key={`BUFFER_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderDays = () => {\n        const result : JSX.Element[] = [];\n        for(let day of this.props.days){\n            result.push(<CalendarBlock key={`${day.getYear().asNumber()}-${day.getMonth().asNumber()}-${day.asNumber()}`} day={day}/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport CalendarSpace from './CalendarSpace';\n\nexport default class EmptyCalendarLine extends React.Component{\n    render(){\n        return(\n            <div style={{height: \"6vw\", border:\"transparent 1px solid\"}}>\n                {this.renderEmptyLine()}\n            </div>\n        )\n    }\n\n    renderEmptyLine = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<7; i++){\n            result.push(<CalendarSpace/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport Day, { Days } from '../model/time/Day';\nimport CalendarLine from './CalendarLine';\nimport EmptyCalendarLine from './EmptyCalendarLine';\n\ninterface ICalendarBodyProps{\n    month : Month;\n}\n\ninterface ICalendarBodyState{\n\n}\n\nexport default class CalendarBody extends React.Component<ICalendarBodyProps, ICalendarBodyState>{\n    constructor(props : ICalendarBodyProps){\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        const lines : JSX.Element[] = [];\n        let currentLine : Day[] = [];\n        let keyCounter = 0;\n        const daysOfTheMonth = this.props.month.getDays();\n        for(let day of daysOfTheMonth){\n            currentLine.push(day);\n            if(day.getDayOfTheWeek() === Days.getLastDayOfWeek()\n                || day.isLastOfMonth()){\n                lines.push(<CalendarLine key={`CALENDAR_LINE_${keyCounter++}`} days={currentLine}/>)\n                currentLine = [];\n            }\n        }\n\n        if (lines.length < 6) {\n            lines.push(<EmptyCalendarLine/>)\n        }\n        return (\n            <div className={`calendar-body`}>\n                {lines}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CalendarOptions from '../model/CalendarOptions';\nimport { Days } from '../model/time/Day';\n\ninterface IDaysLegendProps{\n    monthColor : string;\n}\n\ninterface IDaysLegendState{\n}\n\nexport default class DaysLegend extends React.Component<IDaysLegendProps, IDaysLegendState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : IDaysLegendProps){\n        super(props);\n    }\n\n    render(){\n        const dayLegend : JSX.Element[] = [];\n        const orderedDays = this.getOrderedDays();\n        for(let day of orderedDays){\n            dayLegend.push(this.renderDay(day));\n        }\n        return (\n            <div className={'day-legend'}>\n                {dayLegend}\n                <div className={'days-underline'} style={{ backgroundColor : `${this.props.monthColor}`}}></div>\n            </div>\n        )\n    }\n\n    renderDay = (day : number) => {\n        const dayAsString = Days.asString(day);\n        return (\n            <div key={`DAY_LEGEND_${day}`} className={`calendar-legend`}>\n                {dayAsString}\n            </div>\n        )\n    }\n\n    getOrderedDays = () => {\n        const result = [];\n        const startAt = CalendarOptions.START_CALENDAR_HEADER_ON;\n        for(let i = 0; i<7; i++){\n            const currentDay = (i+startAt) % 7;\n            result.push(currentDay);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICurrentMonthProps{\n    month : Month;\n}\n\nexport default class CurrentMonth extends React.Component<ICurrentMonthProps>{\n    constructor(props : ICurrentMonthProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={'current-month'}>\n                {this.props.month.asString() + ` `}\n                {this.props.month.getYear().asNumber()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICalendarNavigationProps {\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\nexport default class CalendarNavigation extends React.Component<ICalendarNavigationProps>{\n    constructor(props : ICalendarNavigationProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={'calendar-navigation'}>\n                <button onClick={this.doPreviousMonth} className={'button-previous'}>&#8249;</button>\n                <button onClick={this.doNextMonth} className={'button-next'}>&#8250;</button>\n            </div>\n        )\n    }\n\n    doNextMonth = () => {\n        this.props.setMonth(this.props.month.getNextMonth());\n    }\n\n    doPreviousMonth = () => {\n        this.props.setMonth(this.props.month.getPreviousMonth());\n    }\n}","import React from 'react';\nimport DaysLegend from './DaysLegend';\nimport CurrentMonth from './CurrentMonth';\nimport Month from '../model/time/Month';\nimport CalendarNavigation from './CalendarNavigation';\n\ninterface ICalendarHeaderProps{\n    month : Month;\n    setMonth : (month : Month) => void;\n    monthColor : string;\n}\n\nexport default class CalendarHeader extends React.Component<ICalendarHeaderProps>{\n    constructor(props:ICalendarHeaderProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={`calendar-header`}>\n                <CalendarNavigation month={this.props.month} setMonth={this.props.setMonth}/>\n                <CurrentMonth month={this.props.month} />\n                <DaysLegend monthColor={this.props.monthColor}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Circle.scss';\n\ninterface ICircleProps {\n    monthColor : string;\n    top : string;\n    left : string;\n    bottom : string;\n    right : string;\n}\n\nconst Circle : React.FC<ICircleProps> = props => {\n    return(\n        <div className={`circle`} style={{ backgroundColor: props.monthColor, \n            left: props.left,\n            top: props.top,\n            bottom: props.bottom,\n            right: props.right}}></div>\n    );\n}\n\nexport default Circle;","import React from 'react';\nimport DataStore from '../business/data/DataStore';\nimport Month from '../model/time/Month';\nimport './MonthRecap.scss';\nimport Entry from '../model/data/Entry';\n\ninterface IMonthRecapProps {\n    month : Month;\n}\n\nconst MonthRecap : React.FC<IMonthRecapProps> = props => {\n    const entries = DataStore.getEntriesForMonth(props.month);\n    var list : Entry[][] = [];\n    for (let i = 0; i < entries.length / 3; i++) {\n        list.push(entries.slice(i*3, i*3+3));\n    }\n    return (\n        <div className={'month-recap'}>\n            {list.map(v => \n                <div className={`month-recap-group`}>\n                    {v.map(t =>\n                        <div className={'month-recap-entry'}>\n                            <div className={`background`} style={{\n                                backgroundColor : t.getColor()\n                            }}/>\n                            <div className={`left`}>{getDateWithFormat(t.startDate)} - {getDateWithFormat(t.endDate)}</div> \n                            <div className={`right`}>{t.location.toUpperCase()}</div>\n                        </div>)}\n                </div>)}\n        </div>\n    );\n}\n\nconst getMonth = (date : Date) => {\n    var month = date.getMonth() + 1;\n    if (month < 10) {\n        return `0${month}`;\n    }\n    return `${month}`;\n}\n\nconst getDay = (date : Date) => {\n    var day = date.getDate();\n    if (day < 10) {\n        return `0${day}`;\n    }\n    return `${day}`;\n}\n\nconst getDateWithFormat = (date : Date) => {\n    return `${getDay(date)}/${getMonth(date)}`;\n }\n\nexport default MonthRecap;","import React from 'react';\nimport './Screen.scss';\n\ninterface IScreenProps {\n    className : string;\n}\n\nconst Screen : React.FC<IScreenProps> = props => {\n    return (\n        <div className={`screen ${props.className}`}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Screen;","import React from 'react';\nimport Color from '../model/Color';\nimport Month from '../model/time/Month';\nimport './Calendar.scss';\nimport CalendarBody from './CalendarBody';\nimport CalendarHeader from './CalendarHeader';\nimport Circle from './Circle';\nimport MonthRecap from './MonthRecap';\nimport Screen from './Screen/Screen';\n\ninterface ICalendarProps{\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\ninterface ICalendarState{\n}\n\nexport default class Calendar extends React.Component<ICalendarProps, ICalendarState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : ICalendarProps){\n        super(props);\n\n        this.state = {\n        }\n    }\n\n    render(){\n        const monthColor = this.getMonthColor(this.props.month);\n        return (\n        <Screen className=''>\n            <div className={'triangle-bottomright'} style={{ borderBottomColor: `${monthColor}`}}></div>\n            <Circle monthColor={monthColor} top=\"1vw\" left=\"5vw\" bottom=\"\" right=\"\"/>\n            <MonthRecap month={this.props.month} />\n            <div className={'calendar-wrapper'}>\n                <CalendarHeader month={this.props.month} setMonth={this.props.setMonth} monthColor={monthColor}/>\n                <CalendarBody month={this.props.month} />\n            </div>\n        </Screen>\n        );\n    }\n\n    getMonthColor = (month : Month) => {\n        const color = Color.COLORS[month.asNumber()];\n        return `var(${color})`;\n    }\n}","import React from 'react';\nimport './Home.scss';\nimport Circle from '../Circle';\nimport Screen from '../Screen/Screen';\nimport Month from '../../model/time/Month';\nimport Color from '../../model/Color';\n\ninterface IHomeProps {\n    month : Month;\n}\n\nconst Home : React.FC<IHomeProps> = props => {\n    const getMonthColor = (month : Month) => {\n        const color = Color.COLORS[month.asNumber()];\n        return `var(${color})`;\n    }\n    const monthColor = getMonthColor(props.month);\n    return (\n        <Screen className={`home`}>\n            <div className={'triangle-topleft'} style={{ borderTopColor: `${monthColor}`}}></div>\n            <Circle monthColor={monthColor} top=\"\" left=\"\" bottom=\"1vw\" right=\"5vw\"/>\n            <div className={'home-wrapper'}>\n                <div className={`left-mock`}></div>\n                <div className={`left`}>\n                    <div className={`photo`} style={{ backgroundImage: \"url('img/couple.png')\"}}></div>\n                    <div className={`credit`}>Photo credits: <a href='https://www.instagram.com/ab_gu/' target='_blank'>Abel Guillard</a></div>\n                </div>\n                <div className={`right`}>\n                    <div className={`right-wrapper`}>\n                        <div className={`right-with-margin`}>\n                            <div className={`title`}>Hi there</div>\n                            <div className={`text`}>\n                                <p>We have been on the move since September 2019. It's sometimes hard for our families and friends to track our travels, that's why we created this online personnalised calendar. It shows where we have been, where we are now and what we have planned for the future.</p>\n                                <p>We love meeting up with people so if you are around us, feel free to come say hi ! And if you want a postcard, just drop us a mail at <a href='mailto:mark.kimanh@gmail.com'>mark.kimanh@gmail.com</a>. We will send you one from wherever we are.</p>\n                            </div>\n                            <div className={`signature`}>Kim Anh &amp; Mark</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Screen>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport './App.scss';\nimport DataStore from './business/data/DataStore';\nimport Calendar from './ui/Calendar';\nimport Home from './ui/Home/Home';\nimport Month from './model/time/Month';\n\ninterface IAppProps{\n\n}\n\ninterface IAppState{\n  loading : boolean;\n  month : Month;\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n  constructor(props : IAppProps){\n    super(props);\n\n    this.state = {\n      loading : true,\n      month : Month.getCurrentMonth()\n    };\n  }\n\n  componentDidMount(){\n    DataStore.init();\n    DataStore.onDataReady(() => this.setState({loading : false}));\n  }\n\n  setMonth = (month : Month) => {\n    this.setState({month});\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Home month={this.state.month} />\n        <Calendar month={this.state.month} setMonth={this.setMonth}/>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}