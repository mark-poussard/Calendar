{"version":3,"sources":["model/Color.ts","business/utility/Util.ts","model/time/Year.ts","model/CalendarOptions.ts","model/time/Day.ts","model/time/Month.ts","model/data/Entry.ts","business/data/DataGetter.ts","business/data/DataStore.ts","ui/CalendarBlock.tsx","ui/CalendarSpace.tsx","ui/CalendarLine.tsx","ui/EmptyCalendarLine.tsx","ui/CalendarBody.tsx","ui/DaysLegend.tsx","ui/CurrentMonth.tsx","ui/CalendarNavigation.tsx","ui/CalendarHeader.tsx","ui/Circle.tsx","ui/MonthRecap.tsx","ui/Calendar.tsx","App.tsx","index.tsx"],"names":["Color","red","green","blue","alpha","_this","this","Object","classCallCheck","lighten","value","darken","toCssString","concat","RED","GREEN","BLUE","GRAY","COLORS","fromHexString","hexString","parseInt","substr","fromString","str","hash","i","length","charCodeAt","Math","abs","stringToHash","Year","year","asNumber","isLeapYear","equals","that","getCurrentYear","Date","getFullYear","CalendarOptions","START_CALENDAR_HEADER_ON","Day","month","day","getDayOfTheWeek","toDate","getDay","isFirstOfMonth","isLastOfMonth","getNumberOfDays","getMonth","getYear","isToday","now","getDate","UTC","Month","Days","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","asString","getFirstDayOfWeek","getLastDayOfWeek","Months","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","indexOf","Error","getDays","size","startAt","arguments","undefined","toConsumableArray","Array","keys","map","range","d","getStartDate","getEndDate","getNextMonth","nextMonthYear","nextMonth","getPreviousMonth","getCurrentMonth","Entry","startDate","endDate","location","getColor","fromRAW","raw","DataGetter","getData","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","cache","then","response","json","jsonData","deserializeData","stop","data","data_DataStore","DataStore","init","dataGetter","doCallbacks","onDataReady","callback","doCallback","callbacks","push","getEntriesForDate","date","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","entry","getTime","err","return","getEntriesForMonth","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","outsideLeft","outsideRight","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","callbackLock","CalendarBlock","props","possibleConstructorReturn","getPrototypeOf","call","isFirstOrLastDate","computeGradient","percentageIncrementor","state","entries","gradualPercentage","isFirst","previousProps","setState","_this2","todayClassName","react_default","createElement","className","t","style","backgroundColor","React","Component","CalendarSpace","CalendarLine","getOffset","firstDay","days","getBuffer","lastDay","renderOffsetBlocks","CalendarSpace_CalendarSpace","key","renderBufferBlocks","renderDays","CalendarBlock_CalendarBlock","EmptyCalendarLine","renderEmptyLine","height","border","CalendarBody","lines","currentLine","keyCounter","daysOfTheMonth","CalendarLine_CalendarLine","EmptyCalendarLine_EmptyCalendarLine","DaysLegend","renderDay","dayAsString","getOrderedDays","currentDay","dayLegend","orderedDays","monthColor","CurrentMonth","CalendarNavigation","doNextMonth","setMonth","doPreviousMonth","onClick","CalendarHeader","CalendarNavigation_CalendarNavigation","CurrentMonth_CurrentMonth","DaysLegend_DaysLegend","Circle","getDateWithFormat","MonthRecap","list","slice","v","toUpperCase","Calendar","getMonthColor","color","Fragment","borderBottomColor","src_ui_Circle","CalendarHeader_CalendarHeader","CalendarBody_CalendarBody","src_ui_MonthRecap","App","loading","Calendar_Calendar","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e00aed6e.chunk.js","sourcesContent":["import { stringToHexColour, stringToHash } from \"../business/utility/Util\";\n\nexport default class Color{\n    red : number;\n    green : number;\n    blue : number;\n    alpha : number;\n\n    constructor(red : number, green : number, blue : number, alpha : number){\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n\n    lighten = (value : number) => {\n        const red = (this.red + value <= 255)?(this.red + value):(255);\n        const green = (this.green + value <= 255)?(this.green + value):(255);\n        const blue = (this.blue + value <= 255)?(this.blue + value):(255);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    darken = (value : number) => {\n        const red = (this.red - value >= 0)?(this.red - value):(0);\n        const green = (this.green - value >= 0)?(this.green - value):(0);\n        const blue = (this.blue - value >= 0)?(this.blue - value):(0);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    toCssString = () => {\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    }\n\n    static RED = new Color(255, 0, 0, 1);\n    static GREEN = new Color(0, 255, 0, 1);\n    static BLUE = new Color(0, 0, 255, 1);\n    static GRAY = new Color(128, 128, 128, 1);\n\n    static COLORS = [\n        '--color-pink', '--color-yellow', '--color-green', '--color-purple', '--color-grey', '--color-blue',\n        '--color-manatee', '--color-tumbleweed', '--color-sage', '--color-cadet-grey', '--color-wild-blue-yonder', '--color-peter-blue '\n    ];\n\n    static fromHexString = (hexString : string) => {\n        const red = parseInt(hexString.substr(1, 2), 16);\n        const green = parseInt(hexString.substr(3, 2), 16);\n        const blue = parseInt(hexString.substr(5, 2), 16);\n        return new Color(red, green, blue, 1);\n    }\n\n    static fromString = (str : string) => {\n        const hash = stringToHash(str);\n        return `var(${Color.COLORS[hash % Color.COLORS.length]})`;\n    }\n}","export function range(size : number, startAt = 0) {\n    return [...(Array(size) as any).keys()].map(i => parseInt(i) + startAt);\n}\n\nexport function stringToHash(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return Math.abs(hash);\n}\n\n// From https://stackoverflow.com/a/16348977\nexport function stringToHexColour(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF;\n        colour += ('00' + value.toString(16)).substr(-2);\n    }\n    return colour;\n}","\nexport default class Year{\n    private year : number;\n\n    constructor(year : number){\n        this.year = year;\n    }\n\n    static getCurrentYear = () => {\n        return new Year(new Date().getFullYear());\n    }\n\n    asNumber = () => { return this.year; }\n\n    isLeapYear = () => {\n        return (this.year % 4 === 0 && this.year%100 !== 0) \n                || (this.year%100 === 0 && this.year%400 === 0);\n    }\n\n    equals = (that : Year) => {\n        return this.year === that.year;\n    }\n}","import { Days } from \"./time/Day\";\n\nexport default class CalendarOptions{\n    static START_CALENDAR_HEADER_ON = 1; // MONDAY\n}","import Year from \"./Year\";\nimport Month, { Months } from \"./Month\";\nimport CalendarOptions from \"../CalendarOptions\";\n\nexport default class Day{\n    private year : Year;\n    private month : Month;\n    private day : number;\n\n    constructor(year : number, month : number, day : number){\n        this.year = new Year(year);\n        this.month = new Month(year, month);\n        this.day = day;\n    }\n\n    getDayOfTheWeek = () => {\n        return this.toDate().getDay();\n    }\n\n    isFirstOfMonth = () => {\n        return this.day === 1;\n    }\n\n    isLastOfMonth = () => {\n        return this.day === this.month.getNumberOfDays();\n    }\n\n    asNumber = () => {\n        return this.day;\n    }\n\n    getMonth = () => {\n        return this.month;\n    }\n\n    getYear = () => {\n        return this.year;\n    }\n\n    isToday = () => {\n        const now = new Date();\n        return now.getFullYear() === this.year.asNumber()\n                && now.getMonth() === this.month.asNumber()\n                && now.getDate() === this.day;\n    }\n\n    toDate = () => {\n        return new Date(Date.UTC(this.year.asNumber(), this.month.asNumber(), this.day));\n    }\n}\n\nexport const Days = {\n    SUNDAY      : 0,\n    MONDAY      : 1,\n    TUESDAY     : 2,\n    WEDNESDAY   : 3,\n    THURSDAY    : 4,\n    FRIDAY      : 5,\n    SATURDAY    : 6,\n\n    asString : (day : number) => {\n        switch(day){\n            case Days.MONDAY :\n                return \"MON\";\n            case Days.TUESDAY :\n                return \"TUE\";\n            case Days.WEDNESDAY :\n                return \"WED\";\n            case Days.THURSDAY :\n                return \"THU\";\n            case Days.FRIDAY :\n                return \"FRI\";\n            case Days.SATURDAY :\n                return \"SAT\";\n            case Days.SUNDAY :\n                return \"SUN\";\n            default :\n                return \"\";\n        }\n    },\n\n    getFirstDayOfWeek : () => {\n        return CalendarOptions.START_CALENDAR_HEADER_ON;\n    },\n\n    getLastDayOfWeek : () => {\n        return (Days.getFirstDayOfWeek() + 6) % 7;\n    },\n}","import Year from \"./Year\";\nimport { range } from \"../../business/utility/Util\";\nimport Day from \"./Day\";\n\nexport default class Month{\n    private year : Year;\n    private month : number;\n\n    constructor(year : number, month : number){\n        this.year = new Year(year);\n        this.month = month;\n    }\n\n    static getCurrentMonth = () => {\n        const now = new Date();\n        return new Month(now.getFullYear(), now.getMonth());\n    }\n\n    public asNumber = () => {\n        return this.month;\n    }\n\n    public asString = () => {\n        switch(this.month){\n            case Months.JANUARY:\n                return \"January\";\n            case Months.FEBRUARY:\n                return \"February\";\n            case Months.MARCH:\n                return \"March\";\n            case Months.APRIL:\n                return \"April\";\n            case Months.MAY:\n                return \"May\";\n            case Months.JUNE:\n                return \"June\";\n            case Months.JULY:\n                return \"July\";\n            case Months.AUGUST:\n                return \"August\";\n            case Months.SEPTEMBER:\n                return \"September\";\n            case Months.OCTOBER:\n                return \"October\";\n            case Months.NOVEMBER:\n                return \"November\";\n            case Months.DECEMBER:\n                return \"December\";\n        }\n    }\n\n    public getNumberOfDays = () => {\n        const days31 = [0, 2, 4, 6, 7, 9, 11];\n        const days30 = [3, 5, 8, 10];\n        if(this.month === Months.FEBRUARY){\n            if(this.year.isLeapYear()){\n                return 29;\n            }\n            else{\n                return 28;\n            }\n        }\n        if(days31.indexOf(this.month) > -1){\n            return 31;\n        }\n        if(days30.indexOf(this.month) > -1){\n            return 30;\n        }\n        throw new Error(\"Unreachable code\");\n    }\n\n    public getDays = () => {\n        return range(this.getNumberOfDays(), 1)\n            .map(d => new Day(this.year.asNumber(), this.month, d));\n    }\n\n    public getStartDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            1));\n    }\n\n    public getEndDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            this.getNumberOfDays()));\n    }\n\n    public getYear = () => {\n        return this.year;\n    }\n\n    public getNextMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month + 1;\n        if(nextMonth > Months.DECEMBER){\n            nextMonth = Months.JANUARY;\n            nextMonthYear += 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public getPreviousMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month - 1;\n        if(nextMonth < Months.JANUARY){\n            nextMonth = Months.DECEMBER;\n            nextMonthYear -= 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public equals = (that : Month) => {\n        return this.month === that.month\n                && this.getYear().equals(that.getYear());\n    }\n}\n\nexport const Months = {\n    JANUARY     : 0,\n    FEBRUARY    : 1,\n    MARCH       : 2,\n    APRIL       : 3,\n    MAY         : 4,\n    JUNE        : 5,\n    JULY        : 6,\n    AUGUST      : 7,\n    SEPTEMBER   : 8,\n    OCTOBER     : 9,\n    NOVEMBER    : 10,\n    DECEMBER    : 11,\n}","import EntryRaw from \"./EntryRaw\";\nimport Color from \"../Color\";\n\nexport default class Entry{\n    startDate : Date;\n    endDate : Date;\n    location : string;\n\n    constructor(startDate : Date, endDate : Date, location : string){\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.location = location;\n    }\n\n    getColor = () => {\n        return Color.fromString(this.location);\n    }\n\n    static fromRAW = (raw : EntryRaw) => {\n        return new Entry(\n            new Date(raw.startDate),\n            new Date(raw.endDate),\n            raw.location\n        );\n    }\n}","import EntryRaw from \"../../model/data/EntryRaw\";\nimport Entry from \"../../model/data/Entry\";\n\n//const DATA_SRC = \"https://pastebin.com/raw/n2s9hVky\";\nconst DATA_SRC = \"https://gist.githubusercontent.com/mark-poussard/a43eade3e2426b64ca97932a23748fe8/raw/calendar.json\"\n\nexport default class DataGetter{\n    getData = async () => {\n        return fetch(DATA_SRC, {cache: \"no-store\"})\n            .then(response => response.json())\n            .then(jsonData => this.deserializeData(jsonData))\n    }\n\n    deserializeData = (data : EntryRaw[]) : Entry[] => {\n        return data.map(raw => Entry.fromRAW(raw));\n    }\n}","import Entry from \"../../model/data/Entry\";\nimport DataGetter from \"./DataGetter\";\nimport Month from \"../../model/time/Month\";\n\nclass DataStore{\n\n    private data : Entry[] | undefined;\n    private dataGetter : DataGetter;\n    private callbacks : (() => void)[];\n    private callbackLock : boolean;\n\n    constructor(){\n        this.dataGetter = new DataGetter();\n        this.callbacks = [];\n        this.callbackLock = false;\n    }\n\n    init = () => {\n        this.dataGetter.getData()\n            .then(data => this.data = data)\n            .then(this.doCallbacks);\n    }\n\n    onDataReady = (callback : () => void) => {\n        if(this.data != null){\n            this.doCallback(callback);\n        }\n        else{\n            this.callbacks.push(callback);\n        }\n    }\n\n    getEntriesForDate = (date : Date) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            if(date.getTime() >= entry.startDate.getTime()\n                && date.getTime() <= entry.endDate.getTime()){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    getEntriesForMonth = (month : Month) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            const outsideLeft = entry.endDate.getTime() < month.getStartDate().getTime();\n            const outsideRight = entry.startDate.getTime() > month.getEndDate().getTime();\n            if(!outsideLeft && !outsideRight){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    private doCallbacks = () => {\n        for(let callback of this.callbacks){\n            this.doCallback(callback);\n        }\n        this.callbacks = [];\n    }\n\n    private doCallback = (callback : () => void) => {\n        if(this.callbackLock){\n            throw new Error(\"Can't call a callback in a callback\");\n        }\n        this.callbackLock = true;\n        callback();\n        this.callbackLock = false;\n    }\n}\n\nexport default new DataStore();","import React from 'react';\nimport DataStore from '../business/data/DataStore';\nimport Entry from '../model/data/Entry';\nimport Day from '../model/time/Day';\n\ninterface ICalendarBlockProps{\n    day : Day;\n}\n\ninterface ICalendarBlockState{\n    entries : Entry[];\n}\n\nexport default class CalendarBlock extends React.Component<ICalendarBlockProps, ICalendarBlockState>{\n    mobileModeSubscription ?: number;\n    \n    constructor(props : ICalendarBlockProps){\n        super(props);\n\n        this.state = {\n            entries : DataStore.getEntriesForDate(this.props.day.toDate())\n        };\n    }\n\n    componentDidUpdate(previousProps : ICalendarBlockProps){\n        if (previousProps.day.toDate().getTime() !== this.props.day.toDate().getTime()){\n            this.setState({\n                entries : DataStore.getEntriesForDate(this.props.day.toDate())\n            });\n        }\n    }\n\n    render(){\n        const todayClassName = (this.props.day.isToday()) ? \"today\" : \"\";\n\n        return (\n            <div className={`calendar-grid-item calendar-block ${todayClassName}`}>\n                <div className={'calendar-grid-item-number'}>\n                    {this.props.day.asNumber()}\n                </div>\n                {this.state.entries.map(t => \n                    <div className={`entry ${t.location}`}\n                        style={{backgroundColor : t.getColor()}}>\n                        {this.isFirstOrLastDate(t, this.props.day) && <span className={`location`}>{t.location}</span>}\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    isFirstOrLastDate = (entry : Entry, date : Day) => {\n        if (date.toDate().getTime() == entry.startDate.getTime() || date.toDate().getTime() == entry.endDate.getTime()) {\n            return true;\n        }\n        return false;\n    }\n\n    computeGradient = () => {\n        let result = \"linear-gradient(\";\n        const percentageIncrementor = 100 / this.state.entries.length;\n        let gradualPercentage = 0;\n        let isFirst = true;\n        for(let entry of this.state.entries){\n            if(!isFirst){\n                result += \", \";\n            }\n            result += entry.getColor() + \" \" + gradualPercentage + \"%\"\n                    + \", \" + entry.getColor()\n                        + \" \" + (gradualPercentage + percentageIncrementor) + \"%\";\n            gradualPercentage += percentageIncrementor;\n            isFirst = false;\n        }\n        result += \")\";\n        return result;\n    }\n}","import React from 'react';\n\nexport default class CalendarSpace extends React.Component{\n    render(){\n        return(\n            <div className={`calendar-grid-item`}>\n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport CalendarOptions from '../model/CalendarOptions';\nimport CalendarBlock from './CalendarBlock';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarLineProps{\n    days : Day[];\n}\n\nexport default class CalendarLine extends React.Component<ICalendarLineProps>{\n    constructor(props : ICalendarLineProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.renderOffsetBlocks()}\n                {this.renderDays()}\n                {this.renderBufferBlocks()}\n            </div>\n        );\n    }\n\n    getOffset = () => {\n        const firstDay = this.props.days[0];\n        if(firstDay.isFirstOfMonth()){\n            return ((firstDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON)%7+7)%7;\n        }\n        return 0;\n    }\n\n    getBuffer = () => {\n        const lastDay = this.props.days[this.props.days.length-1];\n        if(lastDay.isLastOfMonth()){\n            return ((8 - lastDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON) % 7 + 7) % 7;\n        }\n        return 0;\n    }\n\n    renderOffsetBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getOffset(); i++){\n            result.push(<CalendarSpace key={`OFFSET_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderBufferBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getBuffer(); i++){\n            result.push(<CalendarSpace key={`BUFFER_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderDays = () => {\n        const result : JSX.Element[] = [];\n        for(let day of this.props.days){\n            result.push(<CalendarBlock key={`${day.getYear().asNumber()}-${day.getMonth().asNumber()}-${day.asNumber()}`} day={day}/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport CalendarSpace from './CalendarSpace';\n\nexport default class EmptyCalendarLine extends React.Component{\n    render(){\n        return(\n            <div style={{height: \"6vw\", border:\"transparent 1px solid\"}}>\n                {this.renderEmptyLine()}\n            </div>\n        )\n    }\n\n    renderEmptyLine = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<7; i++){\n            result.push(<CalendarSpace/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport Day, { Days } from '../model/time/Day';\nimport CalendarLine from './CalendarLine';\nimport EmptyCalendarLine from './EmptyCalendarLine';\n\ninterface ICalendarBodyProps{\n    month : Month;\n}\n\ninterface ICalendarBodyState{\n\n}\n\nexport default class CalendarBody extends React.Component<ICalendarBodyProps, ICalendarBodyState>{\n    constructor(props : ICalendarBodyProps){\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        const lines : JSX.Element[] = [];\n        let currentLine : Day[] = [];\n        let keyCounter = 0;\n        const daysOfTheMonth = this.props.month.getDays();\n        for(let day of daysOfTheMonth){\n            currentLine.push(day);\n            if(day.getDayOfTheWeek() === Days.getLastDayOfWeek()\n                || day.isLastOfMonth()){\n                lines.push(<CalendarLine key={`CALENDAR_LINE_${keyCounter++}`} days={currentLine}/>)\n                currentLine = [];\n            }\n        }\n\n        if (lines.length < 6) {\n            lines.push(<EmptyCalendarLine/>)\n        }\n        return (\n            <div className={`calendar-body`}>\n                {lines}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CalendarOptions from '../model/CalendarOptions';\nimport { Days } from '../model/time/Day';\n\ninterface IDaysLegendProps{\n    monthColor : string;\n}\n\ninterface IDaysLegendState{\n}\n\nexport default class DaysLegend extends React.Component<IDaysLegendProps, IDaysLegendState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : IDaysLegendProps){\n        super(props);\n    }\n\n    render(){\n        const dayLegend : JSX.Element[] = [];\n        const orderedDays = this.getOrderedDays();\n        for(let day of orderedDays){\n            dayLegend.push(this.renderDay(day));\n        }\n        return (\n            <div className={'day-legend'}>\n                {dayLegend}\n                <div className={'days-underline'} style={{ backgroundColor : `${this.props.monthColor}`}}></div>\n            </div>\n        )\n    }\n\n    renderDay = (day : number) => {\n        const dayAsString = Days.asString(day);\n        return (\n            <div key={`DAY_LEGEND_${day}`} className={`calendar-legend`}>\n                {dayAsString}\n            </div>\n        )\n    }\n\n    getOrderedDays = () => {\n        const result = [];\n        const startAt = CalendarOptions.START_CALENDAR_HEADER_ON;\n        for(let i = 0; i<7; i++){\n            const currentDay = (i+startAt) % 7;\n            result.push(currentDay);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICurrentMonthProps{\n    month : Month;\n}\n\nexport default class CurrentMonth extends React.Component<ICurrentMonthProps>{\n    constructor(props : ICurrentMonthProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={'current-month'}>\n                {this.props.month.asString() + ` `}\n                {this.props.month.getYear().asNumber()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICalendarNavigationProps {\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\nexport default class CalendarNavigation extends React.Component<ICalendarNavigationProps>{\n    constructor(props : ICalendarNavigationProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={'calendar-navigation'}>\n                <button onClick={this.doPreviousMonth} className={'button-previous'}>&#8249;</button>\n                <button onClick={this.doNextMonth} className={'button-next'}>&#8250;</button>\n            </div>\n        )\n    }\n\n    doNextMonth = () => {\n        this.props.setMonth(this.props.month.getNextMonth());\n    }\n\n    doPreviousMonth = () => {\n        this.props.setMonth(this.props.month.getPreviousMonth());\n    }\n}","import React from 'react';\nimport DaysLegend from './DaysLegend';\nimport CurrentMonth from './CurrentMonth';\nimport Month from '../model/time/Month';\nimport CalendarNavigation from './CalendarNavigation';\n\ninterface ICalendarHeaderProps{\n    month : Month;\n    setMonth : (month : Month) => void;\n    monthColor : string;\n}\n\nexport default class CalendarHeader extends React.Component<ICalendarHeaderProps>{\n    constructor(props:ICalendarHeaderProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={`calendar-header`}>\n                <CalendarNavigation month={this.props.month} setMonth={this.props.setMonth}/>\n                <CurrentMonth month={this.props.month} />\n                <DaysLegend monthColor={this.props.monthColor}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Circle.scss';\n\ninterface ICircleProps {\n    monthColor : string;\n}\n\nconst Circle : React.FC<ICircleProps> = props => {\n    return(\n        <div className={`circle`} style={{ backgroundColor: props.monthColor}}></div>\n    );\n}\n\nexport default Circle;","import React from 'react';\nimport DataStore from '../business/data/DataStore';\nimport Month from '../model/time/Month';\nimport './MonthRecap.scss';\nimport Entry from '../model/data/Entry';\n\ninterface IMonthRecapProps {\n    month : Month;\n}\n\nconst MonthRecap : React.FC<IMonthRecapProps> = props => {\n    const entries = DataStore.getEntriesForMonth(props.month);\n    var list : Entry[][] = [];\n    for (let i = 0; i < entries.length / 3; i++) {\n        list.push(entries.slice(i*3, i*3+3));\n    }\n    return (\n        <div className={'month-recap'}>\n            {list.map(v => \n                <div className={`month-recap-group`}>\n                    {v.map(t =>\n                        <div className={'month-recap-entry'}>\n                            <div className={`background`} style={{\n                                backgroundColor : t.getColor()\n                            }}/>\n                            <div className={`left`}>{getDateWithFormat(t.startDate)} - {getDateWithFormat(t.endDate)}</div> \n                            <div className={`right`}>{t.location.toUpperCase()}</div>\n                        </div>)}\n                </div>)}\n        </div>\n    );\n}\n\nconst getMonth = (date : Date) => {\n    var month = date.getMonth() + 1;\n    if (month < 10) {\n        return `0${month}`;\n    }\n    return `${month}`;\n}\n\nconst getDay = (date : Date) => {\n    var day = date.getDate();\n    if (day < 10) {\n        return `0${day}`;\n    }\n    return `${day}`;\n}\n\nconst getDateWithFormat = (date : Date) => {\n    return `${getDay(date)}/${getMonth(date)}`;\n }\n\nexport default MonthRecap;","import React from 'react';\nimport Color from '../model/Color';\nimport Month from '../model/time/Month';\nimport './Calendar.scss';\nimport CalendarBody from './CalendarBody';\nimport CalendarHeader from './CalendarHeader';\nimport Circle from './Circle';\nimport MonthRecap from './MonthRecap';\n\ninterface ICalendarProps{\n    \n}\n\ninterface ICalendarState{\n    month : Month;\n}\n\nexport default class Calendar extends React.Component<ICalendarProps, ICalendarState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : ICalendarProps){\n        super(props);\n\n        this.state = {\n            month : Month.getCurrentMonth()\n        }\n    }\n\n    render(){\n        const monthColor = this.getMonthColor(this.state.month);\n        return (\n        <>\n            <div className={'triangle-bottomright'} style={{ borderBottomColor: `${monthColor}`}}></div>\n            <Circle monthColor={monthColor}/>\n            <div className={'calendar-wrapper'}>\n                <CalendarHeader month={this.state.month} setMonth={this.setMonth} monthColor={monthColor}/>\n                <CalendarBody month={this.state.month} />\n                <MonthRecap month={this.state.month} />\n            </div>\n        </>\n        );\n    }\n\n    setMonth = (month : Month) => {\n        this.setState({month});\n    }\n\n    getMonthColor = (month : Month) => {\n        const color = Color.COLORS[month.asNumber()];\n        return `var(${color})`;\n    }\n}","import React from 'react';\nimport './App.scss';\nimport Calendar from './ui/Calendar';\nimport DataStore from './business/data/DataStore';\nimport Circle from './ui/Circle';\n\ninterface IAppProps{\n\n}\n\ninterface IAppState{\n  loading : boolean;\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n  constructor(props : IAppProps){\n    super(props);\n\n    this.state = {\n      loading : true\n    };\n  }\n\n  componentDidMount(){\n    DataStore.init();\n    DataStore.onDataReady(() => this.setState({loading : false}));\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div>\n        {/* <div className={'triangle-bottomright'}></div>\n        <Circle/> */}\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}