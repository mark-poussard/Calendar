{"version":3,"sources":["model/time/Year.ts","model/CalendarOptions.ts","model/time/Day.ts","model/time/Month.ts","business/utility/Util.ts","model/Color.ts","model/data/Entry.ts","business/data/DataGetter.ts","business/data/DataStore.ts","ui/Locations.tsx","model/SubscribableValue.ts","business/WebAppSettingsStore.ts","ui/CalendarBlock.tsx","ui/CalendarSpace.tsx","ui/CalendarLine.tsx","ui/EmptyCalendarLine.tsx","ui/CalendarBody.tsx","ui/DaysLegend.tsx","ui/CurrentMonth.tsx","ui/CalendarHeader.tsx","ui/CalendarNavigation.tsx","ui/coloursLegend/LocationColour.tsx","ui/coloursLegend/ColoursLegend.tsx","ui/Calendar.tsx","App.tsx","index.tsx"],"names":["Year","year","_this","this","Object","classCallCheck","asNumber","isLeapYear","equals","that","getCurrentYear","Date","getFullYear","CalendarOptions","START_CALENDAR_HEADER_ON","Day","month","day","getDayOfTheWeek","toDate","getDay","isFirstOfMonth","isLastOfMonth","getNumberOfDays","getMonth","getYear","isToday","now","getDate","UTC","Month","Days","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","asString","getFirstDayOfWeek","getLastDayOfWeek","Months","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","indexOf","Error","getDays","size","startAt","arguments","length","undefined","toConsumableArray","Array","keys","map","i","parseInt","range","d","getStartDate","getEndDate","getNextMonth","nextMonthYear","nextMonth","getPreviousMonth","getCurrentMonth","Color","red","green","blue","alpha","lighten","value","darken","toCssString","concat","RED","GREEN","BLUE","GRAY","fromHexString","hexString","substr","fromString","str","hash","charCodeAt","colour","toString","stringToHexColour","Entry","startDate","endDate","location","getColor","fromRAW","raw","DataGetter","getData","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","cache","then","response","json","jsonData","deserializeData","stop","data","data_DataStore","DataStore","init","dataGetter","doCallbacks","onDataReady","callback","doCallback","callbacks","push","getEntriesForDate","date","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","entry","getTime","err","return","getEntriesForMonth","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","outsideLeft","outsideRight","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","callbackLock","Locations","props","possibleConstructorReturn","getPrototypeOf","call","locations","list","react","key","style","position","React","SubscribableValue","subscribeToValue","isInCallback","subscriptionId","subscriptionsIdGenerator","subscriptions","set","unsubscribe","delete","setValue","forEach","getValue","Map","business_WebAppSettingsStore","WebAppSettingsStore","getMobileMode","mobileMode","isMobileMode","w","window","document","documentElement","body","getElementsByTagName","width","innerWidth","clientWidth","height","innerHeight","clientHeight","initMobileMode","addEventListener","CalendarBlock","computeGradient","percentageIncrementor","state","entries","gradualPercentage","isFirst","_this2","mobileModeSubscription","setState","previousProps","todayClassName","react_default","createElement","className","background","Locations_Locations","e","Component","CalendarSpace","CalendarLine","getOffset","firstDay","days","getBuffer","lastDay","renderOffsetBlocks","CalendarSpace_CalendarSpace","renderBufferBlocks","renderDays","CalendarBlock_CalendarBlock","EmptyCalendarLine","renderEmptyLine","border","CalendarBody","lines","currentLine","keyCounter","daysOfTheMonth","CalendarLine_CalendarLine","EmptyCalendarLine_EmptyCalendarLine","DaysLegend","renderDay","dayAsString","substring","getOrderedDays","currentDay","dayLegend","orderedDays","CurrentMonth","CalendarHeader","CurrentMonth_CurrentMonth","DaysLegend_DaysLegend","CalendarNavigation","doNextMonth","setMonth","doPreviousMonth","onClick","LocationColour","backgroundColor","ColoursLegend","getLocations","Set","add","prevProps","legends","LocationColour_LocationColour","Calendar","CalendarHeader_CalendarHeader","CalendarBody_CalendarBody","CalendarNavigation_CalendarNavigation","ColoursLegend_ColoursLegend","App","loading","Calendar_Calendar","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.2f333134.chunk.js","sourcesContent":["\nexport default class Year{\n    private year : number;\n\n    constructor(year : number){\n        this.year = year;\n    }\n\n    static getCurrentYear = () => {\n        return new Year(new Date().getFullYear());\n    }\n\n    asNumber = () => { return this.year; }\n\n    isLeapYear = () => {\n        return (this.year % 4 === 0 && this.year%100 !== 0) \n                || (this.year%100 === 0 && this.year%400 === 0);\n    }\n\n    equals = (that : Year) => {\n        return this.year === that.year;\n    }\n}","import { Days } from \"./time/Day\";\n\nexport default class CalendarOptions{\n    static START_CALENDAR_HEADER_ON = 1; // MONDAY\n}","import Year from \"./Year\";\nimport Month, { Months } from \"./Month\";\nimport CalendarOptions from \"../CalendarOptions\";\n\nexport default class Day{\n    private year : Year;\n    private month : Month;\n    private day : number;\n\n    constructor(year : number, month : number, day : number){\n        this.year = new Year(year);\n        this.month = new Month(year, month);\n        this.day = day;\n    }\n\n    getDayOfTheWeek = () => {\n        return this.toDate().getDay();\n    }\n\n    isFirstOfMonth = () => {\n        return this.day === 1;\n    }\n\n    isLastOfMonth = () => {\n        return this.day === this.month.getNumberOfDays();\n    }\n\n    asNumber = () => {\n        return this.day;\n    }\n\n    getMonth = () => {\n        return this.month;\n    }\n\n    getYear = () => {\n        return this.year;\n    }\n\n    isToday = () => {\n        const now = new Date();\n        return now.getFullYear() === this.year.asNumber()\n                && now.getMonth() === this.month.asNumber()\n                && now.getDate() === this.day;\n    }\n\n    toDate = () => {\n        return new Date(Date.UTC(this.year.asNumber(), this.month.asNumber(), this.day));\n    }\n}\n\nexport const Days = {\n    SUNDAY      : 0,\n    MONDAY      : 1,\n    TUESDAY     : 2,\n    WEDNESDAY   : 3,\n    THURSDAY    : 4,\n    FRIDAY      : 5,\n    SATURDAY    : 6,\n\n    asString : (day : number) => {\n        switch(day){\n            case Days.MONDAY :\n                return \"Monday\";\n            case Days.TUESDAY :\n                return \"Tuesday\";\n            case Days.WEDNESDAY :\n                return \"Wednesday\";\n            case Days.THURSDAY :\n                return \"Thursday\";\n            case Days.FRIDAY :\n                return \"Friday\";\n            case Days.SATURDAY :\n                return \"Saturday\";\n            case Days.SUNDAY :\n                return \"Sunday\";\n            default :\n                return \"\";\n        }\n    },\n\n    getFirstDayOfWeek : () => {\n        return CalendarOptions.START_CALENDAR_HEADER_ON;\n    },\n\n    getLastDayOfWeek : () => {\n        return (Days.getFirstDayOfWeek() + 6) % 7;\n    },\n}","import Year from \"./Year\";\nimport { range } from \"../../business/utility/Util\";\nimport Day from \"./Day\";\n\nexport default class Month{\n    private year : Year;\n    private month : number;\n\n    constructor(year : number, month : number){\n        this.year = new Year(year);\n        this.month = month;\n    }\n\n    static getCurrentMonth = () => {\n        const now = new Date();\n        return new Month(now.getFullYear(), now.getMonth());\n    }\n\n    public asNumber = () => {\n        return this.month;\n    }\n\n    public asString = () => {\n        switch(this.month){\n            case Months.JANUARY:\n                return \"January\";\n            case Months.FEBRUARY:\n                return \"February\";\n            case Months.MARCH:\n                return \"March\";\n            case Months.APRIL:\n                return \"April\";\n            case Months.MAY:\n                return \"May\";\n            case Months.JUNE:\n                return \"June\";\n            case Months.JULY:\n                return \"July\";\n            case Months.AUGUST:\n                return \"August\";\n            case Months.SEPTEMBER:\n                return \"September\";\n            case Months.OCTOBER:\n                return \"October\";\n            case Months.NOVEMBER:\n                return \"November\";\n            case Months.DECEMBER:\n                return \"December\";\n        }\n    }\n\n    public getNumberOfDays = () => {\n        const days31 = [0, 2, 4, 6, 7, 9, 11];\n        const days30 = [3, 5, 8, 10];\n        if(this.month === Months.FEBRUARY){\n            if(this.year.isLeapYear()){\n                return 29;\n            }\n            else{\n                return 28;\n            }\n        }\n        if(days31.indexOf(this.month) > -1){\n            return 31;\n        }\n        if(days30.indexOf(this.month) > -1){\n            return 30;\n        }\n        throw new Error(\"Unreachable code\");\n    }\n\n    public getDays = () => {\n        return range(this.getNumberOfDays(), 1)\n            .map(d => new Day(this.year.asNumber(), this.month, d));\n    }\n\n    public getStartDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            1));\n    }\n\n    public getEndDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            this.getNumberOfDays()));\n    }\n\n    public getYear = () => {\n        return this.year;\n    }\n\n    public getNextMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month + 1;\n        if(nextMonth > Months.DECEMBER){\n            nextMonth = Months.JANUARY;\n            nextMonthYear += 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public getPreviousMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month - 1;\n        if(nextMonth < Months.JANUARY){\n            nextMonth = Months.DECEMBER;\n            nextMonthYear -= 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public equals = (that : Month) => {\n        return this.month === that.month\n                && this.getYear().equals(that.getYear());\n    }\n}\n\nexport const Months = {\n    JANUARY     : 0,\n    FEBRUARY    : 1,\n    MARCH       : 2,\n    APRIL       : 3,\n    MAY         : 4,\n    JUNE        : 5,\n    JULY        : 6,\n    AUGUST      : 7,\n    SEPTEMBER   : 8,\n    OCTOBER     : 9,\n    NOVEMBER    : 10,\n    DECEMBER    : 11,\n}","export function range(size : number, startAt = 0) {\n    return [...(Array(size) as any).keys()].map(i => parseInt(i) + startAt);\n}\n\n// From https://stackoverflow.com/a/16348977\nexport function stringToHexColour(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF;\n        colour += ('00' + value.toString(16)).substr(-2);\n    }\n    return colour;\n}","import { stringToHexColour } from \"../business/utility/Util\";\n\nexport default class Color{\n    red : number;\n    green : number;\n    blue : number;\n    alpha : number;\n\n    constructor(red : number, green : number, blue : number, alpha : number){\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n\n    lighten = (value : number) => {\n        const red = (this.red + value <= 255)?(this.red + value):(255);\n        const green = (this.green + value <= 255)?(this.green + value):(255);\n        const blue = (this.blue + value <= 255)?(this.blue + value):(255);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    darken = (value : number) => {\n        const red = (this.red - value >= 0)?(this.red - value):(0);\n        const green = (this.green - value >= 0)?(this.green - value):(0);\n        const blue = (this.blue - value >= 0)?(this.blue - value):(0);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    toCssString = () => {\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    }\n\n    static RED = new Color(255, 0, 0, 1);\n    static GREEN = new Color(0, 255, 0, 1);\n    static BLUE = new Color(0, 0, 255, 1);\n    static GRAY = new Color(128, 128, 128, 1);\n\n    static fromHexString = (hexString : string) => {\n        const red = parseInt(hexString.substr(1, 2), 16);\n        const green = parseInt(hexString.substr(3, 2), 16);\n        const blue = parseInt(hexString.substr(5, 2), 16);\n        return new Color(red, green, blue, 1);\n    }\n\n    static fromString = (str : string) => {\n        return Color.fromHexString(stringToHexColour(str));\n    }\n}","import EntryRaw from \"./EntryRaw\";\nimport Color from \"../Color\";\n\nexport default class Entry{\n    startDate : Date;\n    endDate : Date;\n    location : string;\n\n    constructor(startDate : Date, endDate : Date, location : string){\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.location = location;\n    }\n\n    getColor = () => {\n        return Color.fromString(this.location);\n    }\n\n    static fromRAW = (raw : EntryRaw) => {\n        return new Entry(\n            new Date(raw.startDate),\n            new Date(raw.endDate),\n            raw.location\n        );\n    }\n}","import EntryRaw from \"../../model/data/EntryRaw\";\nimport Entry from \"../../model/data/Entry\";\n\n//const DATA_SRC = \"https://pastebin.com/raw/n2s9hVky\";\nconst DATA_SRC = \"https://gist.githubusercontent.com/mark-poussard/a43eade3e2426b64ca97932a23748fe8/raw/calendar.json\"\n\nexport default class DataGetter{\n    getData = async () => {\n        return fetch(DATA_SRC, {cache: \"no-store\"})\n            .then(response => response.json())\n            .then(jsonData => this.deserializeData(jsonData))\n    }\n\n    deserializeData = (data : EntryRaw[]) : Entry[] => {\n        return data.map(raw => Entry.fromRAW(raw));\n    }\n}","import Entry from \"../../model/data/Entry\";\nimport DataGetter from \"./DataGetter\";\nimport Month from \"../../model/time/Month\";\n\nclass DataStore{\n\n    private data : Entry[] | undefined;\n    private dataGetter : DataGetter;\n    private callbacks : (() => void)[];\n    private callbackLock : boolean;\n\n    constructor(){\n        this.dataGetter = new DataGetter();\n        this.callbacks = [];\n        this.callbackLock = false;\n    }\n\n    init = () => {\n        this.dataGetter.getData()\n            .then(data => this.data = data)\n            .then(this.doCallbacks);\n    }\n\n    onDataReady = (callback : () => void) => {\n        if(this.data != null){\n            this.doCallback(callback);\n        }\n        else{\n            this.callbacks.push(callback);\n        }\n    }\n\n    getEntriesForDate = (date : Date) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            if(date.getTime() >= entry.startDate.getTime()\n                && date.getTime() <= entry.endDate.getTime()){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    getEntriesForMonth = (month : Month) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            const outsideLeft = entry.endDate.getTime() < month.getStartDate().getTime();\n            const outsideRight = entry.startDate.getTime() > month.getEndDate().getTime();\n            if(!outsideLeft && !outsideRight){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    private doCallbacks = () => {\n        for(let callback of this.callbacks){\n            this.doCallback(callback);\n        }\n        this.callbacks = [];\n    }\n\n    private doCallback = (callback : () => void) => {\n        if(this.callbackLock){\n            throw new Error(\"Can't call a callback in a callback\");\n        }\n        this.callbackLock = true;\n        callback();\n        this.callbackLock = false;\n    }\n}\n\nexport default new DataStore();","import * as React from 'react';\n\ninterface ILocationsProps{\n    locations : string[];\n}\n\nexport default class Locations extends React.Component<ILocationsProps>{\n    constructor(props : ILocationsProps){\n        super(props);\n    }\n\n    render(){\n        if(this.props.locations.length === 0){\n            return null;\n        }\n        const list : JSX.Element[] = [];\n        for(let location of this.props.locations){\n            list.push(\n                <div key={`LIST_LOCATION_${location}`}>\n                    {location}\n                </div>\n            );\n        }\n        return (\n            <div style={{position: \"absolute\"}}>\n                {list}\n            </div>\n        )\n    }\n}","type Callback<T> = (value : T) => void;\n\nexport default class SubscribableValue<T>{\n    private value : T;\n    private subscriptions : Map<number, Callback<T>>;\n    private subscriptionsIdGenerator : number;\n    private isInCallback : boolean;\n\n    constructor(value : T){\n        this.value = value;\n        this.subscriptions = new Map<number, Callback<T>>();\n        this.subscriptionsIdGenerator = 0;\n        this.isInCallback = false;\n    }\n\n    subscribeToValue = (callback : Callback<T>) => {\n        if(this.isInCallback){\n            throw new Error(\"Tried to subscribe to value in a callback.\");\n        }\n        const subscriptionId = this.subscriptionsIdGenerator++;\n        this.subscriptions.set(subscriptionId, callback);\n        this.doCallback(callback);\n        return subscriptionId;\n    }\n\n    unsubscribe = (subscriptionId : number) => {\n        if(this.isInCallback){\n            throw new Error(\"Tried to unsubscribe to value in a callback.\");\n        }\n        this.subscriptions.delete(subscriptionId);\n    }\n\n    setValue = (value : T) => {\n        if(this.isInCallback){\n            throw new Error(\"Tried to set value in a callback.\");\n        }\n        this.value = value;\n        this.subscriptions.forEach(callback => this.doCallback(callback));\n    }\n\n    getValue = () => this.value;\n\n    private doCallback = (callback : Callback<T>) => {\n        this.isInCallback = true;\n        callback(this.value);\n        this.isInCallback = false;\n    }\n}","import SubscribableValue from \"../model/SubscribableValue\";\n\nconst MOBILE_WIDTH = 800;\nconst MOBILE_HEIGHT = 20;\n\nclass WebAppSettingsStore{\n    private mobileMode : SubscribableValue<boolean>;\n\n    constructor(){\n        this.mobileMode = new SubscribableValue<boolean>(false);\n    }\n\n    getMobileMode = () => this.mobileMode;\n\n    private isMobileMode = () => {\n        const w = window;\n        const d = document;\n        const documentElement = d.documentElement;\n        const body = d.getElementsByTagName('body')[0];\n        const width = w.innerWidth || documentElement.clientWidth || body.clientWidth;\n        const height = w.innerHeight|| documentElement.clientHeight|| body.clientHeight;\n        return width < MOBILE_WIDTH || height < MOBILE_HEIGHT;\n    }\n\n    initMobileMode = () => {\n        this.mobileMode.setValue(this.isMobileMode());\n        window.addEventListener(\"resize\", \n            () => this.mobileMode.setValue(this.isMobileMode()));\n    }\n}\n\nexport default new WebAppSettingsStore();","import React from 'react';\nimport Day from '../model/time/Day';\nimport DataStore from '../business/data/DataStore';\nimport Locations from './Locations';\nimport Entry from '../model/data/Entry';\nimport WebAppSettingsStore from '../business/WebAppSettingsStore';\n\ninterface ICalendarBlockProps{\n    day : Day;\n}\n\ninterface ICalendarBlockState{\n    entries : Entry[];\n    mobileMode : boolean;\n}\n\nexport default class CalendarBlock extends React.Component<ICalendarBlockProps, ICalendarBlockState>{\n    mobileModeSubscription ?: number;\n    \n    constructor(props : ICalendarBlockProps){\n        super(props);\n\n        this.state = {\n            entries : DataStore.getEntriesForDate(this.props.day.toDate()),\n            mobileMode : WebAppSettingsStore.getMobileMode().getValue()\n        };\n    }\n\n    componentDidMount(){\n        this.mobileModeSubscription = WebAppSettingsStore.getMobileMode()\n            .subscribeToValue((mobileMode) => {\n                this.setState({mobileMode})\n            });\n    }\n\n    componentWillUnmount(){\n        if(this.mobileModeSubscription != null){\n            WebAppSettingsStore.getMobileMode().unsubscribe(this.mobileModeSubscription);\n            this.mobileModeSubscription = undefined;\n        }\n    }\n\n    componentDidUpdate(previousProps : ICalendarBlockProps){\n        if (previousProps.day.toDate().getTime() !== this.props.day.toDate().getTime()){\n            this.setState({\n                entries : DataStore.getEntriesForDate(this.props.day.toDate())\n            });\n        }\n    }\n\n    render(){\n        const todayClassName = (this.props.day.isToday()) ? \"today\" : \"\";\n\n        return (\n            <div className={`calendar-grid-item calendar-block ${todayClassName}`}\n                style={{background : this.computeGradient()}}>\n                {this.props.day.asNumber()}\n                {!this.state.mobileMode && \n                    <Locations locations={this.state.entries.map(e => e.location)} />}\n            </div>\n        );\n    }\n\n    computeGradient = () => {\n        let result = \"linear-gradient(\";\n        const percentageIncrementor = 100 / this.state.entries.length;\n        let gradualPercentage = 0;\n        let isFirst = true;\n        for(let entry of this.state.entries){\n            if(!isFirst){\n                result += \", \";\n            }\n            result += entry.getColor().toCssString() + \" \" + gradualPercentage + \"%\"\n                    + \", \" + entry.getColor().toCssString() \n                        + \" \" + (gradualPercentage + percentageIncrementor) + \"%\";\n            gradualPercentage += percentageIncrementor;\n            isFirst = false;\n        }\n        result += \")\";\n        return result;\n    }\n}","import React from 'react';\n\nexport default class CalendarSpace extends React.Component{\n    render(){\n        return(\n            <div className={`calendar-grid-item`}>\n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport CalendarOptions from '../model/CalendarOptions';\nimport CalendarBlock from './CalendarBlock';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarLineProps{\n    days : Day[];\n}\n\nexport default class CalendarLine extends React.Component<ICalendarLineProps>{\n    constructor(props : ICalendarLineProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.renderOffsetBlocks()}\n                {this.renderDays()}\n                {this.renderBufferBlocks()}\n            </div>\n        );\n    }\n\n    getOffset = () => {\n        const firstDay = this.props.days[0];\n        if(firstDay.isFirstOfMonth()){\n            return ((firstDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON)%7+7)%7;\n        }\n        return 0;\n    }\n\n    getBuffer = () => {\n        const lastDay = this.props.days[this.props.days.length-1];\n        if(lastDay.isLastOfMonth()){\n            return ((8 - lastDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON) % 7 + 7) % 7;\n        }\n        return 0;\n    }\n\n    renderOffsetBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getOffset(); i++){\n            result.push(<CalendarSpace key={`OFFSET_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderBufferBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getBuffer(); i++){\n            result.push(<CalendarSpace key={`BUFFER_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderDays = () => {\n        const result : JSX.Element[] = [];\n        for(let day of this.props.days){\n            result.push(<CalendarBlock key={`${day.getYear().asNumber()}-${day.getMonth().asNumber()}-${day.asNumber()}`} day={day}/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport CalendarSpace from './CalendarSpace';\n\nexport default class EmptyCalendarLine extends React.Component{\n    render(){\n        return(\n            <div style={{height: \"9vw\", border:\"transparent 1px solid\"}}>\n                {this.renderEmptyLine()}\n            </div>\n        )\n    }\n\n    renderEmptyLine = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<7; i++){\n            result.push(<CalendarSpace/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport Day, { Days } from '../model/time/Day';\nimport CalendarLine from './CalendarLine';\nimport EmptyCalendarLine from './EmptyCalendarLine';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarBodyProps{\n    month : Month;\n}\n\ninterface ICalendarBodyState{\n\n}\n\nexport default class CalendarBody extends React.Component<ICalendarBodyProps, ICalendarBodyState>{\n    constructor(props : ICalendarBodyProps){\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        const lines : JSX.Element[] = [];\n        let currentLine : Day[] = [];\n        let keyCounter = 0;\n        const daysOfTheMonth = this.props.month.getDays();\n        for(let day of daysOfTheMonth){\n            currentLine.push(day);\n            if(day.getDayOfTheWeek() === Days.getLastDayOfWeek()\n                || day.isLastOfMonth()){\n                lines.push(<CalendarLine key={`CALENDAR_LINE_${keyCounter++}`} days={currentLine}/>)\n                currentLine = [];\n            }\n        }\n\n        if (lines.length < 6) {\n            lines.push(<EmptyCalendarLine/>)\n        }\n        return (\n            <div className={`calendar-body`}>\n                {lines}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CalendarOptions from '../model/CalendarOptions';\nimport { Days } from '../model/time/Day';\nimport WebAppSettingsStore from '../business/WebAppSettingsStore';\n\ninterface IDaysLegendProps{\n\n}\n\ninterface IDaysLegendState{\n    mobileMode : boolean;\n}\n\nexport default class DaysLegend extends React.Component<IDaysLegendProps, IDaysLegendState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : IDaysLegendProps){\n        super(props);\n\n        this.state = {\n            mobileMode : WebAppSettingsStore.getMobileMode().getValue()\n        }\n    }\n\n    componentDidMount(){\n        this.mobileModeSubscription = WebAppSettingsStore.getMobileMode()\n            .subscribeToValue((mobileMode) => {\n                this.setState({mobileMode});\n            });\n    }\n\n    componentWillUnmount(){\n        if(this.mobileModeSubscription != null){\n            WebAppSettingsStore.getMobileMode().unsubscribe(this.mobileModeSubscription);\n            this.mobileModeSubscription = undefined;\n        }\n    }\n\n    render(){\n        const dayLegend : JSX.Element[] = [];\n        const orderedDays = this.getOrderedDays();\n        for(let day of orderedDays){\n            dayLegend.push(this.renderDay(day));\n        }\n        return (\n            <div>\n                {dayLegend}\n            </div>\n        )\n    }\n\n    renderDay = (day : number) => {\n        const dayAsString = (this.state.mobileMode)\n            ? (Days.asString(day).substring(0, 3) + \".\")\n            : (Days.asString(day));\n        return (\n            <div key={`DAY_LEGEND_${day}`} className={`calendar-legend`}>\n                {dayAsString}\n            </div>\n        )\n    }\n\n    getOrderedDays = () => {\n        const result = [];\n        const startAt = CalendarOptions.START_CALENDAR_HEADER_ON;\n        for(let i = 0; i<7; i++){\n            const currentDay = (i+startAt) % 7;\n            result.push(currentDay);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICurrentMonthProps{\n    month : Month;\n}\n\nexport default class CurrentMonth extends React.Component<ICurrentMonthProps>{\n    constructor(props : ICurrentMonthProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.month.asString() + ` `}\n                {this.props.month.getYear().asNumber()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DaysLegend from './DaysLegend';\nimport CurrentMonth from './CurrentMonth';\nimport Month from '../model/time/Month';\n\ninterface ICalendarHeaderProps{\n    month : Month;\n}\n\nexport default class CalendarHeader extends React.Component<ICalendarHeaderProps>{\n    constructor(props:ICalendarHeaderProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={`calendar-header`}>\n                <CurrentMonth month={this.props.month} />\n                <DaysLegend />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICalendarNavigationProps {\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\nexport default class CalendarNavigation extends React.Component<ICalendarNavigationProps>{\n    constructor(props : ICalendarNavigationProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                <button onClick={this.doPreviousMonth}>Previous month</button>\n                <button onClick={this.doNextMonth}>Next month</button>\n            </div>\n        )\n    }\n\n    doNextMonth = () => {\n        this.props.setMonth(this.props.month.getNextMonth());\n    }\n\n    doPreviousMonth = () => {\n        this.props.setMonth(this.props.month.getPreviousMonth());\n    }\n}","import React from 'react';\nimport Color from '../../model/Color';\n\ninterface ILocationColourProps{\n    location : string;\n}\n\nexport default class LocationColour extends React.Component<ILocationColourProps>{\n    constructor(props : ILocationColourProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div style={{\n                backgroundColor: Color.fromString(this.props.location).toCssString(),\n                border: \"1px solid black\",\n                width: \"25%\"\n            }}>\n                {this.props.location}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DataStore from '../../business/data/DataStore';\nimport Month from '../../model/time/Month';\nimport LocationColour from './LocationColour';\n\ninterface IColoursLegendProps{\n    month : Month;\n}\n\ninterface IColoursLegendState{\n    locations : Set<string>;\n}\n\nexport default class ColoursLegend extends React.Component<IColoursLegendProps, IColoursLegendState>{\n    constructor(props : IColoursLegendProps){\n        super(props);\n\n        this.state = {\n            locations : this.getLocations()\n        }\n    }\n\n    componentDidUpdate(prevProps : IColoursLegendProps){\n        if(!prevProps.month.equals(this.props.month)){\n            this.setState({\n                locations : this.getLocations()\n            });\n        }\n    }\n\n    getLocations = () => {\n        const locations = new Set<string>();\n        DataStore.getEntriesForMonth(this.props.month)\n            .forEach(entry => locations.add(entry.location));\n        return locations;\n    }\n\n    render(){\n        const legends : JSX.Element[] = [];\n        for(let location of this.state.locations){\n            legends.push(<LocationColour key={location} location={location} />)\n        }\n        return (\n            legends\n        );\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport CalendarBody from './CalendarBody';\nimport CalendarHeader from './CalendarHeader';\nimport CalendarNavigation from './CalendarNavigation';\nimport './Calendar.css';\nimport WebAppSettingsStore from '../business/WebAppSettingsStore';\nimport ColoursLegend from './coloursLegend/ColoursLegend';\n\ninterface ICalendarProps{\n    \n}\n\ninterface ICalendarState{\n    month : Month;\n    mobileMode : boolean;\n}\n\nexport default class Calendar extends React.Component<ICalendarProps, ICalendarState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : ICalendarProps){\n        super(props);\n\n        this.state = {\n            month : Month.getCurrentMonth(),\n            mobileMode : WebAppSettingsStore.getMobileMode().getValue()\n        }\n    }\n\n    componentDidMount(){\n        this.mobileModeSubscription = WebAppSettingsStore.getMobileMode()\n            .subscribeToValue((mobileMode) => {\n                this.setState({mobileMode})\n            });\n    }\n\n    componentWillUnmount(){\n        if(this.mobileModeSubscription != null){\n            WebAppSettingsStore.getMobileMode().unsubscribe(this.mobileModeSubscription);\n            this.mobileModeSubscription = undefined;\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                <CalendarHeader month={this.state.month} />\n                <CalendarBody month={this.state.month} />\n                <CalendarNavigation month={this.state.month} setMonth={this.setMonth} />\n                {this.state.mobileMode \n                    && <ColoursLegend month={this.state.month} />}\n            </div>\n        );\n    }\n\n    setMonth = (month : Month) => {\n        this.setState({month});\n    }\n}","import React from 'react';\nimport './App.css';\nimport Calendar from './ui/Calendar';\nimport DataStore from './business/data/DataStore';\n\ninterface IAppProps{\n\n}\n\ninterface IAppState{\n  loading : boolean;\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n  constructor(props : IAppProps){\n    super(props);\n\n    this.state = {\n      loading : true\n    };\n  }\n\n  componentDidMount(){\n    DataStore.init();\n    DataStore.onDataReady(() => this.setState({loading : false}));\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport WebAppSettingsStore from './business/WebAppSettingsStore';\n\nWebAppSettingsStore.initMobileMode();\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}