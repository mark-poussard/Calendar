{"version":3,"sources":["model/SubscribableValue.ts","business/WebAppSettingsStore.ts","model/time/Year.ts","model/CalendarOptions.ts","model/time/Day.ts","model/time/Month.ts","business/utility/Util.ts","model/Color.ts","model/data/Entry.ts","business/data/DataGetter.ts","business/data/DataStore.ts","ui/CalendarBlock.tsx","ui/CalendarSpace.tsx","ui/CalendarLine.tsx","ui/EmptyCalendarLine.tsx","ui/CalendarBody.tsx","ui/DaysLegend.tsx","ui/CurrentMonth.tsx","ui/CalendarNavigation.tsx","ui/CalendarHeader.tsx","ui/coloursLegend/LocationColour.tsx","ui/coloursLegend/ColoursLegend.tsx","ui/MonthRecap.tsx","ui/Circle.tsx","ui/Calendar.tsx","App.tsx","index.tsx"],"names":["SubscribableValue","value","_this","this","Object","classCallCheck","subscribeToValue","callback","isInCallback","Error","subscriptionId","subscriptionsIdGenerator","subscriptions","set","doCallback","unsubscribe","delete","setValue","forEach","getValue","Map","business_WebAppSettingsStore","WebAppSettingsStore","getMobileMode","mobileMode","isMobileMode","w","window","d","document","documentElement","body","getElementsByTagName","width","innerWidth","clientWidth","height","innerHeight","clientHeight","initMobileMode","addEventListener","Year","year","asNumber","isLeapYear","equals","that","getCurrentYear","Date","getFullYear","CalendarOptions","START_CALENDAR_HEADER_ON","Day","month","day","getDayOfTheWeek","toDate","getDay","isFirstOfMonth","isLastOfMonth","getNumberOfDays","getMonth","getYear","isToday","now","getDate","UTC","Month","Days","SUNDAY","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","asString","getFirstDayOfWeek","getLastDayOfWeek","Months","JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER","indexOf","getDays","size","startAt","arguments","length","undefined","toConsumableArray","Array","keys","map","i","parseInt","range","getStartDate","getEndDate","getNextMonth","nextMonthYear","nextMonth","getPreviousMonth","getCurrentMonth","Color","red","green","blue","alpha","lighten","darken","toCssString","concat","RED","GREEN","BLUE","GRAY","COLORS","fromHexString","hexString","substr","fromString","str","hash","charCodeAt","Math","abs","stringToHash","console","log","Entry","startDate","endDate","location","getColor","fromRAW","raw","DataGetter","getData","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","cache","then","response","json","jsonData","deserializeData","stop","data","data_DataStore","DataStore","init","dataGetter","doCallbacks","onDataReady","callbacks","push","getEntriesForDate","date","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","entry","getTime","err","return","getEntriesForMonth","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","outsideLeft","outsideRight","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","callbackLock","CalendarBlock","props","possibleConstructorReturn","getPrototypeOf","call","isFirstOrLastDate","computeGradient","percentageIncrementor","state","entries","gradualPercentage","isFirst","_this2","mobileModeSubscription","setState","previousProps","_this3","todayClassName","react_default","createElement","className","t","style","backgroundColor","React","Component","CalendarSpace","CalendarLine","getOffset","firstDay","days","getBuffer","lastDay","renderOffsetBlocks","CalendarSpace_CalendarSpace","key","renderBufferBlocks","renderDays","CalendarBlock_CalendarBlock","EmptyCalendarLine","renderEmptyLine","border","CalendarBody","lines","currentLine","keyCounter","daysOfTheMonth","CalendarLine_CalendarLine","EmptyCalendarLine_EmptyCalendarLine","DaysLegend","renderDay","dayAsString","substring","getOrderedDays","currentDay","dayLegend","orderedDays","monthColor","CurrentMonth","CalendarNavigation","doNextMonth","setMonth","doPreviousMonth","onClick","CalendarHeader","CalendarNavigation_CalendarNavigation","CurrentMonth_CurrentMonth","DaysLegend_DaysLegend","LocationColour","ColoursLegend","getLocations","locations","Set","add","prevProps","legends","LocationColour_LocationColour","getDateWithFormat","MonthRecap","list","slice","v","toUpperCase","Circle","Calendar","getMonthColor","color","Fragment","borderBottom","src_ui_Circle","CalendarHeader_CalendarHeader","CalendarBody_CalendarBody","ColoursLegend_ColoursLegend","src_ui_MonthRecap","App","loading","Calendar_Calendar","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.91d567de.chunk.js","sourcesContent":["type Callback<T> = (value : T) => void;\n\nexport default class SubscribableValue<T>{\n    private value : T;\n    private subscriptions : Map<number, Callback<T>>;\n    private subscriptionsIdGenerator : number;\n    private isInCallback : boolean;\n\n    constructor(value : T){\n        this.value = value;\n        this.subscriptions = new Map<number, Callback<T>>();\n        this.subscriptionsIdGenerator = 0;\n        this.isInCallback = false;\n    }\n\n    subscribeToValue = (callback : Callback<T>) => {\n        if(this.isInCallback){\n            throw new Error(\"Tried to subscribe to value in a callback.\");\n        }\n        const subscriptionId = this.subscriptionsIdGenerator++;\n        this.subscriptions.set(subscriptionId, callback);\n        this.doCallback(callback);\n        return subscriptionId;\n    }\n\n    unsubscribe = (subscriptionId : number) => {\n        if(this.isInCallback){\n            throw new Error(\"Tried to unsubscribe to value in a callback.\");\n        }\n        this.subscriptions.delete(subscriptionId);\n    }\n\n    setValue = (value : T) => {\n        if(this.isInCallback){\n            throw new Error(\"Tried to set value in a callback.\");\n        }\n        this.value = value;\n        this.subscriptions.forEach(callback => this.doCallback(callback));\n    }\n\n    getValue = () => this.value;\n\n    private doCallback = (callback : Callback<T>) => {\n        this.isInCallback = true;\n        callback(this.value);\n        this.isInCallback = false;\n    }\n}","import SubscribableValue from \"../model/SubscribableValue\";\n\nconst MOBILE_WIDTH = 800;\nconst MOBILE_HEIGHT = 20;\n\nclass WebAppSettingsStore{\n    private mobileMode : SubscribableValue<boolean>;\n\n    constructor(){\n        this.mobileMode = new SubscribableValue<boolean>(false);\n    }\n\n    getMobileMode = () => this.mobileMode;\n\n    private isMobileMode = () => {\n        const w = window;\n        const d = document;\n        const documentElement = d.documentElement;\n        const body = d.getElementsByTagName('body')[0];\n        const width = w.innerWidth || documentElement.clientWidth || body.clientWidth;\n        const height = w.innerHeight|| documentElement.clientHeight|| body.clientHeight;\n        return width < MOBILE_WIDTH || height < MOBILE_HEIGHT;\n    }\n\n    initMobileMode = () => {\n        this.mobileMode.setValue(this.isMobileMode());\n        window.addEventListener(\"resize\", \n            () => this.mobileMode.setValue(this.isMobileMode()));\n    }\n}\n\nexport default new WebAppSettingsStore();","\nexport default class Year{\n    private year : number;\n\n    constructor(year : number){\n        this.year = year;\n    }\n\n    static getCurrentYear = () => {\n        return new Year(new Date().getFullYear());\n    }\n\n    asNumber = () => { return this.year; }\n\n    isLeapYear = () => {\n        return (this.year % 4 === 0 && this.year%100 !== 0) \n                || (this.year%100 === 0 && this.year%400 === 0);\n    }\n\n    equals = (that : Year) => {\n        return this.year === that.year;\n    }\n}","import { Days } from \"./time/Day\";\n\nexport default class CalendarOptions{\n    static START_CALENDAR_HEADER_ON = 1; // MONDAY\n}","import Year from \"./Year\";\nimport Month, { Months } from \"./Month\";\nimport CalendarOptions from \"../CalendarOptions\";\n\nexport default class Day{\n    private year : Year;\n    private month : Month;\n    private day : number;\n\n    constructor(year : number, month : number, day : number){\n        this.year = new Year(year);\n        this.month = new Month(year, month);\n        this.day = day;\n    }\n\n    getDayOfTheWeek = () => {\n        return this.toDate().getDay();\n    }\n\n    isFirstOfMonth = () => {\n        return this.day === 1;\n    }\n\n    isLastOfMonth = () => {\n        return this.day === this.month.getNumberOfDays();\n    }\n\n    asNumber = () => {\n        return this.day;\n    }\n\n    getMonth = () => {\n        return this.month;\n    }\n\n    getYear = () => {\n        return this.year;\n    }\n\n    isToday = () => {\n        const now = new Date();\n        return now.getFullYear() === this.year.asNumber()\n                && now.getMonth() === this.month.asNumber()\n                && now.getDate() === this.day;\n    }\n\n    toDate = () => {\n        return new Date(Date.UTC(this.year.asNumber(), this.month.asNumber(), this.day));\n    }\n}\n\nexport const Days = {\n    SUNDAY      : 0,\n    MONDAY      : 1,\n    TUESDAY     : 2,\n    WEDNESDAY   : 3,\n    THURSDAY    : 4,\n    FRIDAY      : 5,\n    SATURDAY    : 6,\n\n    asString : (day : number) => {\n        switch(day){\n            case Days.MONDAY :\n                return \"MON\";\n            case Days.TUESDAY :\n                return \"TUE\";\n            case Days.WEDNESDAY :\n                return \"WED\";\n            case Days.THURSDAY :\n                return \"THU\";\n            case Days.FRIDAY :\n                return \"FRI\";\n            case Days.SATURDAY :\n                return \"SAT\";\n            case Days.SUNDAY :\n                return \"SUN\";\n            default :\n                return \"\";\n        }\n    },\n\n    getFirstDayOfWeek : () => {\n        return CalendarOptions.START_CALENDAR_HEADER_ON;\n    },\n\n    getLastDayOfWeek : () => {\n        return (Days.getFirstDayOfWeek() + 6) % 7;\n    },\n}","import Year from \"./Year\";\nimport { range } from \"../../business/utility/Util\";\nimport Day from \"./Day\";\n\nexport default class Month{\n    private year : Year;\n    private month : number;\n\n    constructor(year : number, month : number){\n        this.year = new Year(year);\n        this.month = month;\n    }\n\n    static getCurrentMonth = () => {\n        const now = new Date();\n        return new Month(now.getFullYear(), now.getMonth());\n    }\n\n    public asNumber = () => {\n        return this.month;\n    }\n\n    public asString = () => {\n        switch(this.month){\n            case Months.JANUARY:\n                return \"January\";\n            case Months.FEBRUARY:\n                return \"February\";\n            case Months.MARCH:\n                return \"March\";\n            case Months.APRIL:\n                return \"April\";\n            case Months.MAY:\n                return \"May\";\n            case Months.JUNE:\n                return \"June\";\n            case Months.JULY:\n                return \"July\";\n            case Months.AUGUST:\n                return \"August\";\n            case Months.SEPTEMBER:\n                return \"September\";\n            case Months.OCTOBER:\n                return \"October\";\n            case Months.NOVEMBER:\n                return \"November\";\n            case Months.DECEMBER:\n                return \"December\";\n        }\n    }\n\n    public getNumberOfDays = () => {\n        const days31 = [0, 2, 4, 6, 7, 9, 11];\n        const days30 = [3, 5, 8, 10];\n        if(this.month === Months.FEBRUARY){\n            if(this.year.isLeapYear()){\n                return 29;\n            }\n            else{\n                return 28;\n            }\n        }\n        if(days31.indexOf(this.month) > -1){\n            return 31;\n        }\n        if(days30.indexOf(this.month) > -1){\n            return 30;\n        }\n        throw new Error(\"Unreachable code\");\n    }\n\n    public getDays = () => {\n        return range(this.getNumberOfDays(), 1)\n            .map(d => new Day(this.year.asNumber(), this.month, d));\n    }\n\n    public getStartDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            1));\n    }\n\n    public getEndDate = () => {\n        return new Date(Date.UTC(\n            this.getYear().asNumber(), \n            this.asNumber(),\n            this.getNumberOfDays()));\n    }\n\n    public getYear = () => {\n        return this.year;\n    }\n\n    public getNextMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month + 1;\n        if(nextMonth > Months.DECEMBER){\n            nextMonth = Months.JANUARY;\n            nextMonthYear += 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public getPreviousMonth = () => {\n        let nextMonthYear = this.year.asNumber();\n        let nextMonth = this.month - 1;\n        if(nextMonth < Months.JANUARY){\n            nextMonth = Months.DECEMBER;\n            nextMonthYear -= 1;\n        }\n        return new Month(nextMonthYear, nextMonth);\n    }\n\n    public equals = (that : Month) => {\n        return this.month === that.month\n                && this.getYear().equals(that.getYear());\n    }\n}\n\nexport const Months = {\n    JANUARY     : 0,\n    FEBRUARY    : 1,\n    MARCH       : 2,\n    APRIL       : 3,\n    MAY         : 4,\n    JUNE        : 5,\n    JULY        : 6,\n    AUGUST      : 7,\n    SEPTEMBER   : 8,\n    OCTOBER     : 9,\n    NOVEMBER    : 10,\n    DECEMBER    : 11,\n}","export function range(size : number, startAt = 0) {\n    return [...(Array(size) as any).keys()].map(i => parseInt(i) + startAt);\n}\n\nexport function stringToHash(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return Math.abs(hash);\n}\n\n// From https://stackoverflow.com/a/16348977\nexport function stringToHexColour(str : string) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF;\n        colour += ('00' + value.toString(16)).substr(-2);\n    }\n    return colour;\n}","import { stringToHexColour, stringToHash } from \"../business/utility/Util\";\n\nexport default class Color{\n    red : number;\n    green : number;\n    blue : number;\n    alpha : number;\n\n    constructor(red : number, green : number, blue : number, alpha : number){\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n    }\n\n    lighten = (value : number) => {\n        const red = (this.red + value <= 255)?(this.red + value):(255);\n        const green = (this.green + value <= 255)?(this.green + value):(255);\n        const blue = (this.blue + value <= 255)?(this.blue + value):(255);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    darken = (value : number) => {\n        const red = (this.red - value >= 0)?(this.red - value):(0);\n        const green = (this.green - value >= 0)?(this.green - value):(0);\n        const blue = (this.blue - value >= 0)?(this.blue - value):(0);\n        return new Color(red, green, blue, this.alpha);\n    }\n\n    toCssString = () => {\n        return `rgba(${this.red}, ${this.green}, ${this.blue}, ${this.alpha})`;\n    }\n\n    static RED = new Color(255, 0, 0, 1);\n    static GREEN = new Color(0, 255, 0, 1);\n    static BLUE = new Color(0, 0, 255, 1);\n    static GRAY = new Color(128, 128, 128, 1);\n\n    static COLORS = [\n        '--color-pink', '--color-yellow', '--color-green', '--color-purple', '--color-grey', '--color-blue',\n        '--color-manatee', '--color-tumbleweed', '--color-sage', '--color-cadet-grey', '--color-wild-blue-yonder', '--color-peter-blue '\n    ];\n\n    static fromHexString = (hexString : string) => {\n        const red = parseInt(hexString.substr(1, 2), 16);\n        const green = parseInt(hexString.substr(3, 2), 16);\n        const blue = parseInt(hexString.substr(5, 2), 16);\n        return new Color(red, green, blue, 1);\n    }\n\n    static fromString = (str : string) => {\n        const hash = stringToHash(str);\n        console.log(hash);\n        console.log(Color.COLORS.length);\n        console.log(hash % Color.COLORS.length);\n        return `var(${Color.COLORS[hash % Color.COLORS.length]})`;\n    }\n}","import EntryRaw from \"./EntryRaw\";\nimport Color from \"../Color\";\n\nexport default class Entry{\n    startDate : Date;\n    endDate : Date;\n    location : string;\n\n    constructor(startDate : Date, endDate : Date, location : string){\n        this.startDate = startDate;\n        this.endDate = endDate;\n        this.location = location;\n    }\n\n    getColor = () => {\n        return Color.fromString(this.location);\n    }\n\n    static fromRAW = (raw : EntryRaw) => {\n        return new Entry(\n            new Date(raw.startDate),\n            new Date(raw.endDate),\n            raw.location\n        );\n    }\n}","import EntryRaw from \"../../model/data/EntryRaw\";\nimport Entry from \"../../model/data/Entry\";\n\n//const DATA_SRC = \"https://pastebin.com/raw/n2s9hVky\";\nconst DATA_SRC = \"https://gist.githubusercontent.com/mark-poussard/a43eade3e2426b64ca97932a23748fe8/raw/calendar.json\"\n\nexport default class DataGetter{\n    getData = async () => {\n        return fetch(DATA_SRC, {cache: \"no-store\"})\n            .then(response => response.json())\n            .then(jsonData => this.deserializeData(jsonData))\n    }\n\n    deserializeData = (data : EntryRaw[]) : Entry[] => {\n        return data.map(raw => Entry.fromRAW(raw));\n    }\n}","import Entry from \"../../model/data/Entry\";\nimport DataGetter from \"./DataGetter\";\nimport Month from \"../../model/time/Month\";\n\nclass DataStore{\n\n    private data : Entry[] | undefined;\n    private dataGetter : DataGetter;\n    private callbacks : (() => void)[];\n    private callbackLock : boolean;\n\n    constructor(){\n        this.dataGetter = new DataGetter();\n        this.callbacks = [];\n        this.callbackLock = false;\n    }\n\n    init = () => {\n        this.dataGetter.getData()\n            .then(data => this.data = data)\n            .then(this.doCallbacks);\n    }\n\n    onDataReady = (callback : () => void) => {\n        if(this.data != null){\n            this.doCallback(callback);\n        }\n        else{\n            this.callbacks.push(callback);\n        }\n    }\n\n    getEntriesForDate = (date : Date) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            if(date.getTime() >= entry.startDate.getTime()\n                && date.getTime() <= entry.endDate.getTime()){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    getEntriesForMonth = (month : Month) => {\n        if(this.data == null){\n            throw new Error(\"Data was not ready to consume\");\n        }\n        const result = [];\n        for(let entry of this.data){\n            const outsideLeft = entry.endDate.getTime() < month.getStartDate().getTime();\n            const outsideRight = entry.startDate.getTime() > month.getEndDate().getTime();\n            if(!outsideLeft && !outsideRight){\n                result.push(entry);\n            }\n        }\n        return result;\n    }\n\n    private doCallbacks = () => {\n        for(let callback of this.callbacks){\n            this.doCallback(callback);\n        }\n        this.callbacks = [];\n    }\n\n    private doCallback = (callback : () => void) => {\n        if(this.callbackLock){\n            throw new Error(\"Can't call a callback in a callback\");\n        }\n        this.callbackLock = true;\n        callback();\n        this.callbackLock = false;\n    }\n}\n\nexport default new DataStore();","import React from 'react';\nimport DataStore from '../business/data/DataStore';\nimport WebAppSettingsStore from '../business/WebAppSettingsStore';\nimport Entry from '../model/data/Entry';\nimport Day from '../model/time/Day';\n\ninterface ICalendarBlockProps{\n    day : Day;\n}\n\ninterface ICalendarBlockState{\n    entries : Entry[];\n    mobileMode : boolean;\n}\n\nexport default class CalendarBlock extends React.Component<ICalendarBlockProps, ICalendarBlockState>{\n    mobileModeSubscription ?: number;\n    \n    constructor(props : ICalendarBlockProps){\n        super(props);\n\n        this.state = {\n            entries : DataStore.getEntriesForDate(this.props.day.toDate()),\n            mobileMode : WebAppSettingsStore.getMobileMode().getValue()\n        };\n    }\n\n    componentDidMount(){\n        this.mobileModeSubscription = WebAppSettingsStore.getMobileMode()\n            .subscribeToValue((mobileMode) => {\n                this.setState({mobileMode})\n            });\n    }\n\n    componentWillUnmount(){\n        if(this.mobileModeSubscription != null){\n            WebAppSettingsStore.getMobileMode().unsubscribe(this.mobileModeSubscription);\n            this.mobileModeSubscription = undefined;\n        }\n    }\n\n    componentDidUpdate(previousProps : ICalendarBlockProps){\n        if (previousProps.day.toDate().getTime() !== this.props.day.toDate().getTime()){\n            this.setState({\n                entries : DataStore.getEntriesForDate(this.props.day.toDate())\n            });\n        }\n    }\n\n    render(){\n        const todayClassName = (this.props.day.isToday()) ? \"today\" : \"\";\n\n        return (\n            <div className={`calendar-grid-item calendar-block ${todayClassName}`}>\n                <div className={'calendar-grid-item-number'}>\n                    {this.props.day.asNumber()}\n                </div>\n                {this.state.entries.map(t => \n                    <div className={`entry ${t.location}`}\n                        style={{backgroundColor : t.getColor()}}>\n                        {this.isFirstOrLastDate(t, this.props.day) && t.location}\n                    </div>\n                )}\n                {/* {!this.state.mobileMode && \n                    <Locations locations={this.state.entries.map(e => e.location)} />} */}\n            </div>\n        );\n    }\n\n    isFirstOrLastDate = (entry : Entry, date : Day) => {\n        if (date.toDate().getTime() == entry.startDate.getTime() || date.toDate().getTime() == entry.endDate.getTime()) {\n            return true;\n        }\n        return false;\n    }\n\n    computeGradient = () => {\n        let result = \"linear-gradient(\";\n        const percentageIncrementor = 100 / this.state.entries.length;\n        let gradualPercentage = 0;\n        let isFirst = true;\n        for(let entry of this.state.entries){\n            if(!isFirst){\n                result += \", \";\n            }\n            result += entry.getColor() + \" \" + gradualPercentage + \"%\"\n                    + \", \" + entry.getColor()\n                        + \" \" + (gradualPercentage + percentageIncrementor) + \"%\";\n            gradualPercentage += percentageIncrementor;\n            isFirst = false;\n        }\n        result += \")\";\n        return result;\n    }\n}","import React from 'react';\n\nexport default class CalendarSpace extends React.Component{\n    render(){\n        return(\n            <div className={`calendar-grid-item`}>\n                \n            </div>\n        )\n    }\n}","import React from 'react';\nimport Day from '../model/time/Day';\nimport CalendarOptions from '../model/CalendarOptions';\nimport CalendarBlock from './CalendarBlock';\nimport CalendarSpace from './CalendarSpace';\n\ninterface ICalendarLineProps{\n    days : Day[];\n}\n\nexport default class CalendarLine extends React.Component<ICalendarLineProps>{\n    constructor(props : ICalendarLineProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div>\n                {this.renderOffsetBlocks()}\n                {this.renderDays()}\n                {this.renderBufferBlocks()}\n            </div>\n        );\n    }\n\n    getOffset = () => {\n        const firstDay = this.props.days[0];\n        if(firstDay.isFirstOfMonth()){\n            return ((firstDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON)%7+7)%7;\n        }\n        return 0;\n    }\n\n    getBuffer = () => {\n        const lastDay = this.props.days[this.props.days.length-1];\n        if(lastDay.isLastOfMonth()){\n            return ((8 - lastDay.getDayOfTheWeek() - CalendarOptions.START_CALENDAR_HEADER_ON) % 7 + 7) % 7;\n        }\n        return 0;\n    }\n\n    renderOffsetBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getOffset(); i++){\n            result.push(<CalendarSpace key={`OFFSET_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderBufferBlocks = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<this.getBuffer(); i++){\n            result.push(<CalendarSpace key={`BUFFER_${i}`}/>);\n        }\n        return result;\n    }\n\n    renderDays = () => {\n        const result : JSX.Element[] = [];\n        for(let day of this.props.days){\n            result.push(<CalendarBlock key={`${day.getYear().asNumber()}-${day.getMonth().asNumber()}-${day.asNumber()}`} day={day}/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport CalendarSpace from './CalendarSpace';\n\nexport default class EmptyCalendarLine extends React.Component{\n    render(){\n        return(\n            <div style={{height: \"6vw\", border:\"transparent 1px solid\"}}>\n                {this.renderEmptyLine()}\n            </div>\n        )\n    }\n\n    renderEmptyLine = () => {\n        const result : JSX.Element[] = [];\n        for(let i = 0; i<7; i++){\n            result.push(<CalendarSpace/>);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\nimport Day, { Days } from '../model/time/Day';\nimport CalendarLine from './CalendarLine';\nimport EmptyCalendarLine from './EmptyCalendarLine';\n\ninterface ICalendarBodyProps{\n    month : Month;\n}\n\ninterface ICalendarBodyState{\n\n}\n\nexport default class CalendarBody extends React.Component<ICalendarBodyProps, ICalendarBodyState>{\n    constructor(props : ICalendarBodyProps){\n        super(props);\n\n        this.state = {};\n    }\n\n    render(){\n        const lines : JSX.Element[] = [];\n        let currentLine : Day[] = [];\n        let keyCounter = 0;\n        const daysOfTheMonth = this.props.month.getDays();\n        for(let day of daysOfTheMonth){\n            currentLine.push(day);\n            if(day.getDayOfTheWeek() === Days.getLastDayOfWeek()\n                || day.isLastOfMonth()){\n                lines.push(<CalendarLine key={`CALENDAR_LINE_${keyCounter++}`} days={currentLine}/>)\n                currentLine = [];\n            }\n        }\n\n        if (lines.length < 6) {\n            lines.push(<EmptyCalendarLine/>)\n        }\n        return (\n            <div className={`calendar-body`}>\n                {lines}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport CalendarOptions from '../model/CalendarOptions';\nimport { Days } from '../model/time/Day';\nimport WebAppSettingsStore from '../business/WebAppSettingsStore';\n\ninterface IDaysLegendProps{\n    monthColor : string;\n}\n\ninterface IDaysLegendState{\n    mobileMode : boolean;\n}\n\nexport default class DaysLegend extends React.Component<IDaysLegendProps, IDaysLegendState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : IDaysLegendProps){\n        super(props);\n\n        this.state = {\n            mobileMode : WebAppSettingsStore.getMobileMode().getValue()\n        }\n    }\n\n    componentDidMount(){\n        this.mobileModeSubscription = WebAppSettingsStore.getMobileMode()\n            .subscribeToValue((mobileMode) => {\n                this.setState({mobileMode});\n            });\n    }\n\n    componentWillUnmount(){\n        if(this.mobileModeSubscription != null){\n            WebAppSettingsStore.getMobileMode().unsubscribe(this.mobileModeSubscription);\n            this.mobileModeSubscription = undefined;\n        }\n    }\n\n    render(){\n        const dayLegend : JSX.Element[] = [];\n        const orderedDays = this.getOrderedDays();\n        for(let day of orderedDays){\n            dayLegend.push(this.renderDay(day));\n        }\n        return (\n            <div className={'day-legend'}>\n                {dayLegend}\n                <div className={'days-underline'} style={{ backgroundColor : `${this.props.monthColor}`}}></div>\n            </div>\n        )\n    }\n\n    renderDay = (day : number) => {\n        const dayAsString = (this.state.mobileMode)\n            ? (Days.asString(day).substring(0, 3) + \".\")\n            : (Days.asString(day));\n        return (\n            <div key={`DAY_LEGEND_${day}`} className={`calendar-legend`}>\n                {dayAsString}\n            </div>\n        )\n    }\n\n    getOrderedDays = () => {\n        const result = [];\n        const startAt = CalendarOptions.START_CALENDAR_HEADER_ON;\n        for(let i = 0; i<7; i++){\n            const currentDay = (i+startAt) % 7;\n            result.push(currentDay);\n        }\n        return result;\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICurrentMonthProps{\n    month : Month;\n}\n\nexport default class CurrentMonth extends React.Component<ICurrentMonthProps>{\n    constructor(props : ICurrentMonthProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={'current-month'}>\n                {this.props.month.asString() + ` `}\n                {this.props.month.getYear().asNumber()}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Month from '../model/time/Month';\n\ninterface ICalendarNavigationProps {\n    month : Month;\n    setMonth : (month : Month) => void;\n}\n\nexport default class CalendarNavigation extends React.Component<ICalendarNavigationProps>{\n    constructor(props : ICalendarNavigationProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={'calendar-navigation'}>\n                <button onClick={this.doPreviousMonth} className={'button-previous'}>&#8249;</button>\n                <button onClick={this.doNextMonth} className={'button-next'}>&#8250;</button>\n            </div>\n        )\n    }\n\n    doNextMonth = () => {\n        this.props.setMonth(this.props.month.getNextMonth());\n    }\n\n    doPreviousMonth = () => {\n        this.props.setMonth(this.props.month.getPreviousMonth());\n    }\n}","import React from 'react';\nimport DaysLegend from './DaysLegend';\nimport CurrentMonth from './CurrentMonth';\nimport Month from '../model/time/Month';\nimport CalendarNavigation from './CalendarNavigation';\n\ninterface ICalendarHeaderProps{\n    month : Month;\n    setMonth : (month : Month) => void;\n    monthColor : string;\n}\n\nexport default class CalendarHeader extends React.Component<ICalendarHeaderProps>{\n    constructor(props:ICalendarHeaderProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div className={`calendar-header`}>\n                <CalendarNavigation month={this.props.month} setMonth={this.props.setMonth}/>\n                <CurrentMonth month={this.props.month} />\n                <DaysLegend monthColor={this.props.monthColor}/>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Color from '../../model/Color';\n\ninterface ILocationColourProps{\n    location : string;\n}\n\nexport default class LocationColour extends React.Component<ILocationColourProps>{\n    constructor(props : ILocationColourProps){\n        super(props);\n    }\n\n    render(){\n        return (\n            <div style={{\n                backgroundColor: Color.fromString(this.props.location),\n                border: \"1px solid black\"\n            }}>\n                {this.props.location}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport DataStore from '../../business/data/DataStore';\nimport Month from '../../model/time/Month';\nimport LocationColour from './LocationColour';\n\ninterface IColoursLegendProps{\n    month : Month;\n}\n\ninterface IColoursLegendState{\n    locations : Set<string>;\n}\n\nexport default class ColoursLegend extends React.Component<IColoursLegendProps, IColoursLegendState>{\n    constructor(props : IColoursLegendProps){\n        super(props);\n\n        this.state = {\n            locations : this.getLocations()\n        }\n    }\n\n    componentDidUpdate(prevProps : IColoursLegendProps){\n        if(!prevProps.month.equals(this.props.month)){\n            this.setState({\n                locations : this.getLocations()\n            });\n        }\n    }\n\n    getLocations = () => {\n        const locations = new Set<string>();\n        DataStore.getEntriesForMonth(this.props.month)\n            .forEach(entry => locations.add(entry.location));\n        return locations;\n    }\n\n    render(){\n        const legends : JSX.Element[] = [];\n        for(let location of this.state.locations){\n            legends.push(<LocationColour key={location} location={location} />)\n        }\n        return (\n            legends\n        );\n    }\n}","import React from 'react';\nimport DataStore from '../business/data/DataStore';\nimport Month from '../model/time/Month';\nimport './MonthRecap.scss';\nimport Entry from '../model/data/Entry';\n\ninterface IMonthRecapProps {\n    month : Month;\n}\n\nconst MonthRecap : React.FC<IMonthRecapProps> = props => {\n    const entries = DataStore.getEntriesForMonth(props.month);\n    var list : Entry[][] = [];\n    for (let i = 0; i < entries.length / 3; i++) {\n        list.push(entries.slice(i*3, i*3+3));\n    }\n    return (\n        <div className={'month-recap'}>\n            {list.map(v => \n                <div className={`month-recap-group`}>\n                    {v.map(t =>\n                        <div className={'month-recap-entry'}>\n                            <div className={`left`}>{getDateWithFormat(t.startDate)} - {getDateWithFormat(t.endDate)}</div> \n                            <div className={`right`}>{t.location.toUpperCase()}</div>\n                        </div>)}\n                </div>)}\n        </div>\n    );\n}\n\nconst getMonth = (date : Date) => {\n    var month = date.getMonth() + 1;\n    if (month < 10) {\n        return `0${month}`;\n    }\n    return `${month}`;\n}\n\nconst getDay = (date : Date) => {\n    var day = date.getDate();\n    if (day < 10) {\n        return `0${day}`;\n    }\n    return `${day}`;\n}\n\nconst getDateWithFormat = (date : Date) => {\n    return `${getDay(date)}/${getMonth(date)}`;\n }\n\nexport default MonthRecap;","import React from 'react';\nimport './Circle.scss';\n\ninterface ICircleProps {\n    monthColor : string;\n}\n\nconst Circle : React.FC<ICircleProps> = props => {\n    return(\n        <div className={`circle`} style={{ backgroundColor: props.monthColor}}></div>\n    );\n}\n\nexport default Circle;","import React from 'react';\nimport WebAppSettingsStore from '../business/WebAppSettingsStore';\nimport Month from '../model/time/Month';\nimport './Calendar.scss';\nimport CalendarBody from './CalendarBody';\nimport CalendarHeader from './CalendarHeader';\nimport ColoursLegend from './coloursLegend/ColoursLegend';\nimport MonthRecap from './MonthRecap';\nimport Circle from './Circle';\nimport Color from '../model/Color';\n\ninterface ICalendarProps{\n    \n}\n\ninterface ICalendarState{\n    month : Month;\n    mobileMode : boolean;\n}\n\nexport default class Calendar extends React.Component<ICalendarProps, ICalendarState>{\n    mobileModeSubscription ?: number;\n\n    constructor(props : ICalendarProps){\n        super(props);\n\n        this.state = {\n            month : Month.getCurrentMonth(),\n            mobileMode : WebAppSettingsStore.getMobileMode().getValue()\n        }\n    }\n\n    componentDidMount(){\n        this.mobileModeSubscription = WebAppSettingsStore.getMobileMode()\n            .subscribeToValue((mobileMode) => {\n                this.setState({mobileMode})\n            });\n    }\n\n    componentWillUnmount(){\n        if(this.mobileModeSubscription != null){\n            WebAppSettingsStore.getMobileMode().unsubscribe(this.mobileModeSubscription);\n            this.mobileModeSubscription = undefined;\n        }\n    }\n\n    render(){\n        const monthColor = this.getMonthColor(this.state.month);\n        return (\n        <>\n            <div className={'triangle-bottomright'} style={{ borderBottom: `75vh solid ${monthColor}`}}></div>\n            <Circle monthColor={monthColor}/>\n            <div className={'calendar-wrapper'}>\n                <CalendarHeader month={this.state.month} setMonth={this.setMonth} monthColor={monthColor}/>\n                <CalendarBody month={this.state.month} />\n                {this.state.mobileMode \n                    && <ColoursLegend month={this.state.month} />}\n                <MonthRecap month={this.state.month} />\n            </div>\n        </>\n        );\n    }\n\n    setMonth = (month : Month) => {\n        this.setState({month});\n    }\n\n    getMonthColor = (month : Month) => {\n        const color = Color.COLORS[month.asNumber()];\n        return `var(${color})`;\n    }\n}","import React from 'react';\nimport './App.scss';\nimport Calendar from './ui/Calendar';\nimport DataStore from './business/data/DataStore';\nimport Circle from './ui/Circle';\n\ninterface IAppProps{\n\n}\n\ninterface IAppState{\n  loading : boolean;\n}\n\nexport default class App extends React.Component<IAppProps, IAppState>{\n  constructor(props : IAppProps){\n    super(props);\n\n    this.state = {\n      loading : true\n    };\n  }\n\n  componentDidMount(){\n    DataStore.init();\n    DataStore.onDataReady(() => this.setState({loading : false}));\n  }\n\n  render() {\n    if(this.state.loading){\n      return (\n        <div>\n          Loading...\n        </div>\n      )\n    }\n    return (\n      <div>\n        {/* <div className={'triangle-bottomright'}></div>\n        <Circle/> */}\n        <Calendar />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport WebAppSettingsStore from './business/WebAppSettingsStore';\n\nWebAppSettingsStore.initMobileMode();\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}